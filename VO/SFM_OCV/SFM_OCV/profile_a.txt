Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 48.46      3.62     3.62 206509790     0.00     0.00  Mat<float>::get(int, int) const
 10.58      4.41     0.79   196199     0.00     0.00  Mat<float>::Mat(Mat<float> const&, float, int, int, int, int)
  6.83      4.92     0.51  1810368     0.00     0.00  Mat<float>::Mat(Mat<float> const&)
  6.16      5.38     0.46   581219     0.00     0.00  Mat<float>::copy(Mat<float> const&)
  5.35      5.78     0.40 56402520     0.00     0.00  Mat<float>::getLine() const
  5.09      6.16     0.38     1704     0.00     0.00  cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>)
  3.35      6.41     0.25  5101635     0.00     0.00  Mat<float>::~Mat()
  1.87      6.55     0.14 10898299     0.00     0.00  Mat<float>::set(float, int, int)
  1.87      6.69     0.14   254494     0.00     0.00  Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&)
  1.47      6.80     0.11 58910234     0.00     0.00  Mat<float>::getColumn() const
  1.14      6.88     0.09  2291920     0.00     0.00  Mat<float>::Mat(int, int)
  0.94      6.96     0.07   399760     0.00     0.00  Mat<float> operator*<float>(float const&, Mat<float> const&)
  0.87      7.02     0.07   221536     0.00     0.00  Mat<float>::Mat(float, int, int)
  0.80      7.08     0.06   132694     0.00     0.00  Frame<float>::get(Mat<float> const&)
  0.67      7.13     0.05   486082     0.00     0.00  Mat<float> extract<float>(Mat<float> const&, int, int, int, int)
  0.60      7.17     0.04                             void DrawCircle<float>(Mat<float>*, int, int, int, float)
  0.54      7.21     0.04   265388     0.00     0.00  Mat<float> sum<float>(Mat<float> const&)
  0.47      7.25     0.04   581147     0.00     0.00  Mat<float>::operator=(Mat<float> const&)
  0.27      7.27     0.02   329344     0.00     0.00  std::sqrt(float)
  0.27      7.29     0.02   132720     0.00     0.00  Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&)
  0.27      7.31     0.02    42532     0.00     0.00  Mat<float> expW<float>(Mat<float> const&)
  0.13      7.32     0.01   957422     0.00     0.00  void std::swap<float>(float&, float&)
  0.13      7.33     0.01   689939     0.00     0.00  float fabs_<float>(float)
  0.13      7.34     0.01   320707     0.00     0.00  __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float)
  0.13      7.35     0.01   254704     0.00     0.00  void transpose<float>(Mat<float>*)
  0.13      7.36     0.01   188271     0.00     0.00  Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&)
  0.13      7.37     0.01   175298     0.00     0.00  Mat<float> transpose<float>(Mat<float> const&)
  0.13      7.38     0.01   137312     0.00     0.00  Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&)
  0.13      7.39     0.01    42523     0.00     0.00  LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&)
  0.13      7.40     0.01    42523     0.00     0.00  LSSE3<float>::Z(Mat<float> const&)
  0.13      7.41     0.01    42523     0.00     0.00  LSSE3<float>::proj(Mat<float> const&)
  0.13      7.42     0.01    42523     0.00     0.00  LSSE3<float>::warp(Mat<float> const&, Mat<float> const&)
  0.13      7.43     0.01    19776     0.00     0.00  Mat<float> absM<float>(Mat<float> const&)
  0.13      7.44     0.01       96     0.00     0.00  Mat<float> pooling<float>(Mat<float>, Mat<float>, int)
  0.13      7.45     0.01       17     0.00     0.00  Mat<float>::afficher()
  0.13      7.46     0.01                             float mean<float>(Mat<float>)
  0.07      7.46     0.01    68891     0.00     0.00  void homogeneousNormalization<float>(Mat<float>*)
  0.07      7.47     0.01     6542     0.00     0.00  Mat<float> Line<float>(Mat<float> const&, int)
  0.00      7.47     0.00   265388     0.00     0.00  std::floor(float)
  0.00      7.47     0.00   183254     0.00     0.00  Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&)
  0.00      7.47     0.00   175226     0.00     0.00  float norme1<float>(Mat<float>)
  0.00      7.47     0.00   102780     0.00     0.00  unsigned char* cv::Mat::ptr<unsigned char>(int)
  0.00      7.47     0.00    58887     0.00     0.00  Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&)
  0.00      7.47     0.00    50592     0.00     0.00  float max<float>(Mat<float>)
  0.00      7.47     0.00    44180     0.00     0.00  Mat<float> crossProduct<float>(Mat<float> const&)
  0.00      7.47     0.00    42532     0.00     0.00  Mat<float> expMSIM3<float>(Mat<float> const&)
  0.00      7.47     0.00    42532     0.00     0.00  std::cos(float)
  0.00      7.47     0.00    42532     0.00     0.00  std::sin(float)
  0.00      7.47     0.00    42523     0.00     0.00  LSSE3<float>::r(Mat<float> const&, Mat<float> const&)
  0.00      7.47     0.00    42523     0.00     0.00  LSSE3<float>::retroproj(Mat<float> const&)
  0.00      7.47     0.00    21424     0.00     0.00  float norme2<float>(Mat<float>)
  0.00      7.47     0.00    18128     0.00     0.00  bool operator< <float>(Mat<float> const&, Mat<float> const&)
  0.00      7.47     0.00     6632     0.00     0.00  cv::Point_<int>::Point_(int, int)
  0.00      7.47     0.00     4986     0.00     0.00  cv::Vec<double, 4>::Vec()
  0.00      7.47     0.00     4986     0.00     0.00  cv::Matx<double, 4, 1>::Matx()
  0.00      7.47     0.00     4986     0.00     0.00  cv::Scalar_<double>::Scalar_(double, double, double, double)
  0.00      7.47     0.00     3271     0.00     0.00  LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&)
  0.00      7.47     0.00     3271     0.00     0.00  LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int)
  0.00      7.47     0.00     1897     0.00     0.00  cv::Mat::release()
  0.00      7.47     0.00     1897     0.00     0.00  cv::Mat::~Mat()
  0.00      7.47     0.00     1787     0.00     0.00  cv::Mat::MSize::MSize(int*)
  0.00      7.47     0.00     1787     0.00     0.00  cv::Mat::MStep::MStep()
  0.00      7.47     0.00     1735     0.00     0.00  cv::Mat::initEmpty()
  0.00      7.47     0.00     1704     0.00     0.00  cv::Mat::create(int, int, int)
  0.00      7.47     0.00     1704     0.00     0.00  cv::Mat::Mat(int, int, int)
  0.00      7.47     0.00     1648     0.00     0.00  computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*)
  0.00      7.47     0.00     1648     0.00     0.00  computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*)
  0.00      7.47     0.00     1648     0.00     0.00  exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float)
  0.00      7.47     0.00     1648     0.00     0.00  std::abs(float)
  0.00      7.47     0.00     1522     0.00     0.00  Ranfib::doub()
  0.00      7.47     0.00      386     0.00     0.00  Mat<float>::Mat()
  0.00      7.47     0.00      210     0.00     0.00  Mat<float> product<float>(Mat<float>*, Mat<float>*)
  0.00      7.47     0.00      206     0.00     0.00  NormalRand::dev()
  0.00      7.47     0.00      194     0.00     0.00  Frame<float>::~Frame()
  0.00      7.47     0.00      160     0.00     0.00  __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const
  0.00      7.47     0.00      120     0.00     0.00  Frame<float>::getChannel() const
  0.00      7.47     0.00      112     0.00     0.00  __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&)
  0.00      7.47     0.00      107     0.00     0.00  cv::Size_<int>::Size_(int, int)
  0.00      7.47     0.00      104     0.00     0.00  cv::Mat::MStep::operator[](int)
  0.00      7.47     0.00      104     0.00     0.00  cv::Mat::MStep::operator[](int) const
  0.00      7.47     0.00       96     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::size() const
  0.00      7.47     0.00       88     0.00     0.00  __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::base() const
  0.00      7.47     0.00       83     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator()
  0.00      7.47     0.00       76     0.00     0.00  cv::Mat* std::__addressof<cv::Mat>(cv::Mat&)
  0.00      7.47     0.00       75     0.00     0.00  operator new(unsigned int, void*)
  0.00      7.47     0.00       72     0.00     0.00  Frame<float>::copyFrame(Frame<float> const&)
  0.00      7.47     0.00       72     0.00     0.00  Frame<float>::operator=(Frame<float> const&)
  0.00      7.47     0.00       72     0.00     0.00  __gnu_cxx::new_allocator<cv::Mat>::max_size() const
  0.00      7.47     0.00       72     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int)
  0.00      7.47     0.00       70     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::begin()
  0.00      7.47     0.00       64     0.00     0.00  Frame<float>::Frame()
  0.00      7.47     0.00       64     0.00     0.00  __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::__normal_iterator(Mat<float>* const&)
  0.00      7.47     0.00       64     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.47     0.00       64     0.00     0.00  bool operator==<float>(Mat<float> const&, Mat<float> const&)
  0.00      7.47     0.00       57     0.00     0.00  Mat<float> invGJ<float>(Mat<float>, int)
  0.00      7.47     0.00       57     0.00     0.00  Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int)
  0.00      7.47     0.00       57     0.00     0.00  Frame<float>::Frame(Mat<float>, int)
  0.00      7.47     0.00       56     0.00     0.00  Ranq1::int64()
  0.00      7.47     0.00       55     0.00     0.00  Ranq1::doub()
  0.00      7.47     0.00       52     0.00     0.00  cv::Mat::Mat(cv::Mat const&)
  0.00      7.47     0.00       52     0.00     0.00  Mat<float>::swap(int, int, int, int)
  0.00      7.47     0.00       52     0.00     0.00  __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&)
  0.00      7.47     0.00       52     0.00     0.00  void std::_Destroy<cv::Mat>(cv::Mat*)
  0.00      7.47     0.00       50     0.00     0.00  std::numeric_limits<float>::epsilon()
  0.00      7.47     0.00       48     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::max_size(std::allocator<cv::Mat> const&)
  0.00      7.47     0.00       48     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() const
  0.00      7.47     0.00       48     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::size() const
  0.00      7.47     0.00       48     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const
  0.00      7.47     0.00       48     0.00     0.00  cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*)
  0.00      7.47     0.00       48     0.00     0.00  cv::Mat* std::uninitialized_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*)
  0.00      7.47     0.00       48     0.00     0.00  cv::Mat* std::__uninitialized_copy_a<cv::Mat*, cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&)
  0.00      7.47     0.00       48     0.00     0.00  cv::Mat* std::__uninitialized_move_if_noexcept_a<cv::Mat*, cv::Mat*, std::allocator<cv::Mat> >(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&)
  0.00      7.47     0.00       48     0.00     0.00  std::pow(float, float)
  0.00      7.47     0.00       45     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator()
  0.00      7.47     0.00       36     0.00     0.00  cv::MatExpr::~MatExpr()
  0.00      7.47     0.00       36     0.00     0.00  __gnu_cxx::new_allocator<Mat<float> >::max_size() const
  0.00      7.47     0.00       36     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::begin()
  0.00      7.47     0.00       36     0.00     0.00  unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
  0.00      7.47     0.00       35     0.00     0.00  void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*)
  0.00      7.47     0.00       35     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int)
  0.00      7.47     0.00       35     0.00     0.00  void std::_Destroy<cv::Mat*>(cv::Mat*, cv::Mat*)
  0.00      7.47     0.00       35     0.00     0.00  void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&)
  0.00      7.47     0.00       32     0.00     0.00  bool isnanM<float>(Mat<float>)
  0.00      7.47     0.00       32     0.00     0.16  LSSE3<float>::computePyramidResidualA(int)
  0.00      7.47     0.00       31     0.00     0.00  cv::Mat::Mat()
  0.00      7.47     0.00       30     0.00     0.00  Mat<float>* std::__addressof<Mat<float> >(Mat<float>&)
  0.00      7.47     0.00       28     0.00     0.00  __gnu_cxx::new_allocator<cv::Mat>::construct(cv::Mat*, cv::Mat const&)
  0.00      7.47     0.00       28     0.00     0.00  void __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::construct<cv::Mat>(std::allocator<cv::Mat>&, cv::Mat*, cv::Mat const&)
  0.00      7.47     0.00       28     0.00     0.00  __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::difference_type __gnu_cxx::operator-<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&)
  0.00      7.47     0.00       28     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&)
  0.00      7.47     0.00       27     0.00     0.00  cv::MatExpr::operator cv::Mat() const
  0.00      7.47     0.00       24     0.00     0.00  void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float)
  0.00      7.47     0.00       24     0.00     0.00  afficher(std::string, cv::Mat*, cv::Mat*, cv::Mat*, bool, float)
  0.00      7.47     0.00       24     0.00     0.00  __gnu_cxx::new_allocator<cv::Mat>::deallocate(cv::Mat*, unsigned int)
  0.00      7.47     0.00       24     0.00     0.00  __gnu_cxx::new_allocator<cv::Mat>::allocate(unsigned int, void const*)
  0.00      7.47     0.00       24     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::max_size(std::allocator<Mat<float> > const&)
  0.00      7.47     0.00       24     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() const
  0.00      7.47     0.00       24     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::max_size() const
  0.00      7.47     0.00       24     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const
  0.00      7.47     0.00       24     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_allocate(unsigned int)
  0.00      7.47     0.00       24     0.00     0.00  Mat<float>* std::__uninitialized_copy<false>::__uninit_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*)
  0.00      7.47     0.00       24     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&)
  0.00      7.47     0.00       24     0.00     0.00  void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&)
  0.00      7.47     0.00       24     0.00     0.00  Mat<float>* std::uninitialized_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*)
  0.00      7.47     0.00       24     0.00     0.00  Mat<float>* std::__uninitialized_copy_a<Mat<float>*, Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&)
  0.00      7.47     0.00       24     0.00     0.00  Mat<float>* std::__uninitialized_move_if_noexcept_a<Mat<float>*, Mat<float>*, std::allocator<Mat<float> > >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&)
  0.00      7.47     0.00       23     0.00     0.00  void std::_Destroy<Mat<float> >(Mat<float>*)
  0.00      7.47     0.00       21     0.00     0.00  void std::_Destroy_aux<false>::__destroy<Mat<float>*>(Mat<float>*, Mat<float>*)
  0.00      7.47     0.00       21     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_deallocate(Mat<float>*, unsigned int)
  0.00      7.47     0.00       21     0.00     0.00  void std::_Destroy<Mat<float>*>(Mat<float>*, Mat<float>*)
  0.00      7.47     0.00       21     0.00     0.00  void std::_Destroy<Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&)
  0.00      7.47     0.00       18     0.00     0.00  cv::Mat::type() const
  0.00      7.47     0.00       18     0.00     0.00  cv::Mat::channels() const
  0.00      7.47     0.00       16     0.00     0.00  __gnu_cxx::new_allocator<Mat<float> >::construct(Mat<float>*, Mat<float> const&)
  0.00      7.47     0.00       16     0.00     0.00  void __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::construct<Mat<float> >(std::allocator<Mat<float> >&, Mat<float>*, Mat<float> const&)
  0.00      7.47     0.00       16     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&)
  0.00      7.47     0.00       14     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::end()
  0.00      7.47     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Mat<float> >::deallocate(Mat<float>*, unsigned int)
  0.00      7.47     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Mat<float> >::allocate(unsigned int, void const*)
  0.00      7.47     0.00       12     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const
  0.00      7.47     0.00       12     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_allocate(unsigned int)
  0.00      7.47     0.00       12     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&)
  0.00      7.47     0.00       12     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::end()
  0.00      7.47     0.00       11     0.00     0.00  __gnu_cxx::new_allocator<cv::Mat>::new_allocator()
  0.00      7.47     0.00       11     0.00     0.00  __gnu_cxx::new_allocator<cv::Mat>::~new_allocator()
  0.00      7.47     0.00       11     0.00     0.00  std::allocator<cv::Mat>::allocator()
  0.00      7.47     0.00       11     0.00     0.00  std::allocator<cv::Mat>::~allocator()
  0.00      7.47     0.00       11     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::_Vector_impl()
  0.00      7.47     0.00       11     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::~_Vector_impl()
  0.00      7.47     0.00       11     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_base()
  0.00      7.47     0.00       11     0.00     0.00  std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base()
  0.00      7.47     0.00       11     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::vector()
  0.00      7.47     0.00       11     0.00     0.00  std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector()
  0.00      7.47     0.00        9     0.00     0.00  computeGradient(cv::Mat*)
  0.00      7.47     0.00        9     0.00     0.00  Mat<float> cv2Matp<float>(cv::Mat)
  0.00      7.47     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<Mat<float> >::new_allocator()
  0.00      7.47     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<Mat<float> >::~new_allocator()
  0.00      7.47     0.00        9     0.00     0.00  std::allocator<Mat<float> >::allocator()
  0.00      7.47     0.00        9     0.00     0.00  std::allocator<Mat<float> >::~allocator()
  0.00      7.47     0.00        9     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::_Vector_impl()
  0.00      7.47     0.00        9     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::~_Vector_impl()
  0.00      7.47     0.00        9     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_base()
  0.00      7.47     0.00        9     0.00     0.00  std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::~_Vector_base()
  0.00      7.47     0.00        9     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::vector()
  0.00      7.47     0.00        9     0.00     0.00  std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector()
  0.00      7.47     0.00        8     0.00     0.66  poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*)
  0.00      7.47     0.00        8     0.00     0.01  debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float)
  0.00      7.47     0.00        8     0.00     0.03  OODirectSlamSE3<float>::computePyramid(int)
  0.00      7.47     0.00        8     0.00     0.03  OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*)
  0.00      7.47     0.00        8     0.00     0.00  OODirectSlamSE3<float>::~OODirectSlamSE3()
  0.00      7.47     0.00        8     0.00     0.00  OO<float>::OO()
  0.00      7.47     0.00        8     0.00     0.00  OO<float>::~OO()
  0.00      7.47     0.00        8     0.00     0.00  Mat<float>::Mat(int, int, char)
  0.00      7.47     0.00        8     0.00     0.00  LSSE3<float>::getResidual(int)
  0.00      7.47     0.00        8     0.00     0.63  LSSE3<float>::energy(Mat<float>)
  0.00      7.47     0.00        8     0.00     0.03  LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int)
  0.00      7.47     0.00        8     0.00     0.00  LSSE3<float>::~LSSE3()
  0.00      7.47     0.00        7     0.00     0.00  void std::_Construct<Mat<float>, Mat<float> >(Mat<float>*, Mat<float> const&)
  0.00      7.47     0.00        4     0.00     0.00  bool __gnu_cxx::operator==<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&)
  0.00      7.47     0.00        4     0.00     0.00  bool __gnu_cxx::operator==<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&)
  0.00      7.47     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z4absMRKN2cv3MatE
  0.00      7.47     0.00        1     0.00     0.07  initializeInvDM(Frame<float>*, float)
  0.00      7.47     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.47     0.00        1     0.00     7.41  main10()
  0.00      7.47     0.00        1     0.00     0.00  NormalRand::NormalRand(double, double, long)
  0.00      7.47     0.00        1     0.00     0.00  Frame<float>::Frame(Frame<float> const&)
  0.00      7.47     0.00        1     0.00     0.00  Ranq1::Ranq1(long)
  0.00      7.47     0.00        1     0.00     0.00  Ranfib::Ranfib(long)
  0.00      7.47     0.00        1     0.00     0.00  std::ceil(float)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.13% of 7.47 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.3    0.00    7.41                 main [1]
                0.00    7.41       1/1           main10() [2]
                0.00    0.00       2/1897        cv::Mat::~Mat() [114]
-----------------------------------------------
                0.00    7.41       1/1           main [1]
[2]     99.3    0.00    7.41       1         main10() [2]
                0.00    5.29       8/8           poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    1.82    1648/1648        exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.00    0.08       8/8           debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.07       1/1           initializeInvDM(Frame<float>*, float) [41]
                0.00    0.06    1648/1648        computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.03    1648/1648        computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.02    1648/132694      Frame<float>::get(Mat<float> const&) [15]
                0.00    0.02    8320/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.02      16/24          void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.00    0.01    4944/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.01    0.00       9/17          Mat<float>::afficher() [55]
                0.00    0.00    1664/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00   84544/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00    1696/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00    3296/68891       void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00       9/9           Mat<float> cv2Matp<float>(cv::Mat) [67]
                0.00    0.00   10043/5101635     Mat<float>::~Mat() [27]
                0.00    0.00    5430/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00       1/57          Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00       1/42532       Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.00    0.00      20/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00       8/72          Frame<float>::operator=(Frame<float> const&) [69]
                0.00    0.00       8/16          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
                0.00    0.00       9/57          Frame<float>::Frame(Mat<float>, int) [71]
                0.00    0.00      22/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00      32/50592       float max<float>(Mat<float>) [60]
                0.00    0.00      16/486082      Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.00    0.00       8/175298      Mat<float> transpose<float>(Mat<float> const&) [46]
                0.00    0.00       1/1           Frame<float>::Frame(Frame<float> const&) [92]
                0.00    0.00     497/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00      10/194         Frame<float>::~Frame() [78]
                0.00    0.00      25/56402520     Mat<float>::getLine() const [23]
                0.00    0.00       3/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00       1/9           std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector() [94]
                0.00    0.00    6632/6632        cv::Point_<int>::Point_(int, int) [109]
                0.00    0.00    1648/1648        std::abs(float) [120]
                0.00    0.00      42/4986        cv::Scalar_<double>::Scalar_(double, double, double, double) [112]
                0.00    0.00      13/1897        cv::Mat::~Mat() [114]
                0.00    0.00      10/14          std::vector<cv::Mat, std::allocator<cv::Mat> >::end() [185]
                0.00    0.00      10/28          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
                0.00    0.00       9/107         cv::Size_<int>::Size_(int, int) [127]
                0.00    0.00       9/9           computeGradient(cv::Mat*) [201]
                0.00    0.00       8/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::end() [190]
                0.00    0.00       4/31          cv::Mat::Mat() [165]
                0.00    0.00       2/50          std::numeric_limits<float>::epsilon() [146]
                0.00    0.00       2/11          std::vector<cv::Mat, std::allocator<cv::Mat> >::vector() [199]
                0.00    0.00       2/386         Mat<float>::Mat() [122]
                0.00    0.00       2/11          std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector() [200]
                0.00    0.00       1/9           std::vector<Mat<float>, std::allocator<Mat<float> > >::vector() [210]
                0.00    0.00       1/1           std::ceil(float) [217]
-----------------------------------------------
                0.00    5.29       8/8           main10() [2]
[3]     70.8    0.00    5.29       8         poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    5.06       8/8           LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.22       8/8           LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.00       8/17          Mat<float>::afficher() [55]
                0.00    0.00       8/42532       Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.00    0.00       8/137312      Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.00    0.00       8/8           LSSE3<float>::~LSSE3() [74]
                0.00    0.00       8/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00       8/8           LSSE3<float>::getResidual(int) [79]
                0.00    0.00      16/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00      40/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    5.06       8/8           poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
[4]     67.7    0.00    5.06       8         LSSE3<float>::energy(Mat<float>) [4]
                0.00    5.06      32/32          LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00      32/57          Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00     160/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.00     128/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00      72/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00      32/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00     416/5101635     Mat<float>::~Mat() [27]
                0.00    0.00      64/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00      64/175298      Mat<float> transpose<float>(Mat<float> const&) [46]
                0.00    0.00      32/32          bool isnanM<float>(Mat<float>) [80]
                0.00    0.00      64/64          bool operator==<float>(Mat<float> const&, Mat<float> const&) [86]
                0.00    0.00      64/56402520     Mat<float>::getLine() const [23]
                0.00    0.00       8/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00      64/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00      32/50          std::numeric_limits<float>::epsilon() [146]
                0.00    0.00      32/48          std::pow(float, float) [155]
-----------------------------------------------
                0.00    5.06      32/32          LSSE3<float>::energy(Mat<float>) [4]
[5]     67.7    0.00    5.06      32         LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    4.55    3271/3271        LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.35    3271/42523       LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
                0.00    0.11    9717/137312      Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.00    0.02    9845/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.01    3271/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.01    0.00    6542/6542        Mat<float> Line<float>(Mat<float> const&, int) [61]
                0.00    0.00    3271/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00  165957/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   52048/320707      __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float) [56]
                0.00    0.00   32678/5101635     Mat<float>::~Mat() [27]
                0.00    0.00  109223/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00    3271/3271        LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [66]
                0.00    0.00    6670/56402520     Mat<float>::getLine() const [23]
                0.00    0.00      32/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00    1888/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00      32/2291920     Mat<float>::Mat(int, int) [39]
-----------------------------------------------
                0.00    4.55    3271/3271        LSSE3<float>::computePyramidResidualA(int) [5]
[6]     60.9    0.00    4.55    3271         LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    4.15   39252/42523       LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
                0.00    0.18   16355/58887       Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.00    0.11   49065/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.06   39252/188271      Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.00    0.03   19626/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.01    0.00  117756/5101635     Mat<float>::~Mat() [27]
                0.00    0.00    3271/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00    3271/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00   35981/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00    3271/320707      __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float) [56]
                0.00    0.00    3271/56402520     Mat<float>::getLine() const [23]
-----------------------------------------------
                0.00    0.35    3271/42523       LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    4.15   39252/42523       LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
[7]     60.2    0.00    4.50   42523         LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
                0.01    3.28   42523/42523       LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [9]
                0.04    1.11   85046/132694      Frame<float>::get(Mat<float> const&) [15]
                0.00    0.06   42523/188271      Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.01    0.00  127569/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    0.00       8/206509790     LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00      48/206509790     OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00     104/206509790     Mat<float>::swap(int, int, int, int) [87]
                0.00    0.00     140/206509790     bool operator==<float>(Mat<float> const&, Mat<float> const&) [86]
                0.00    0.00     192/206509790     Mat<float>::afficher() [55]
                0.00    0.00     384/206509790     bool isnanM<float>(Mat<float>) [80]
                0.00    0.00    4800/206509790     initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00    9888/206509790     computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.00   19626/206509790     LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [66]
                0.00    0.00   19776/206509790     Mat<float> absM<float>(Mat<float> const&) [54]
                0.00    0.00   22897/206509790     Mat<float> Line<float>(Mat<float> const&, int) [61]
                0.00    0.00   36256/206509790     bool operator< <float>(Mat<float> const&, Mat<float> const&) [65]
                0.00    0.00   42532/206509790     Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.00    0.00   45126/206509790     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00   49936/206509790     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00   59328/206509790     exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.00    0.00   84544/206509790     main10() [2]
                0.00    0.00   85046/206509790     LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.00    0.00  127569/206509790     LSSE3<float>::Z(Mat<float> const&) [53]
                0.00    0.00  128544/206509790     float norme2<float>(Mat<float>) [62]
                0.00    0.00  165957/206509790     LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00  186483/206509790     Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.00    0.00  255192/206509790     Mat<float> expW<float>(Mat<float> const&) [22]
                0.00    0.00  265080/206509790     Mat<float> crossProduct<float>(Mat<float> const&) [50]
                0.00    0.00  275564/206509790     void homogeneousNormalization<float>(Mat<float>*) [52]
                0.01    0.00  299614/206509790     Mat<float> transpose<float>(Mat<float> const&) [46]
                0.01    0.00  406432/206509790     float max<float>(Mat<float>) [60]
                0.01    0.00  658372/206509790     float norme1<float>(Mat<float>) [48]
                0.01    0.00  704562/206509790     Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.01    0.00  796164/206509790     Mat<float> sum<float>(Mat<float> const&) [24]
                0.03    0.00 1466032/206509790     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.03    0.00 1565072/206509790     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.03    0.00 1669674/206509790     Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.04    0.00 2017202/206509790     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.04    0.00 2337643/206509790     Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.04    0.00 2385130/206509790     Frame<float>::get(Mat<float> const&) [15]
                0.43    0.00 24537600/206509790     cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
                0.77    0.00 43877037/206509790     Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [12]
                0.79    0.00 45328789/206509790     Mat<float>::copy(Mat<float> const&) [18]
                1.34    0.00 76575447/206509790     Mat<float>::Mat(Mat<float> const&) [13]
[8]     48.5    3.62    0.00 206509790         Mat<float>::get(int, int) const [8]
-----------------------------------------------
                0.01    3.28   42523/42523       LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
[9]     44.0    0.01    3.28   42523         LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [9]
                0.01    2.76   42523/42523       LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.00    0.36   42523/42523       LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.01    0.13   42523/42523       LSSE3<float>::proj(Mat<float> const&) [35]
                0.00    0.00   85046/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.01    2.76   42523/42523       LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [9]
[10]    37.1    0.01    2.76   42523         LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.00    2.04   42523/42532       Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.00    0.48   42523/137312      Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.02    0.10   42523/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.01    0.06   42523/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.01    0.01   85046/486082      Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.01    0.00  255138/5101635     Mat<float>::~Mat() [27]
                0.01    0.00   42523/221536      Mat<float>::Mat(float, int, int) [42]
-----------------------------------------------
                0.00    0.00       1/42532       main10() [2]
                0.00    0.00       8/42532       poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    2.04   42523/42532       LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
[11]    27.3    0.00    2.04   42532         Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.01    0.96   85064/137312      Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.02    0.49   42532/42532       Mat<float> expW<float>(Mat<float> const&) [22]
                0.00    0.48   42532/58887       Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.02    0.00   85064/221536      Mat<float>::Mat(float, int, int) [42]
                0.01    0.01   85064/486082      Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.01    0.01   42532/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.02    0.00  340256/5101635     Mat<float>::~Mat() [27]
                0.00    0.00   42532/206509790     Mat<float>::get(int, int) const [8]
-----------------------------------------------
                0.24    0.35   58887/196199      Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.55    0.82  137312/196199      Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
[12]    26.2    0.79    1.17  196199         Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [12]
                0.77    0.00 43877037/206509790     Mat<float>::get(int, int) const [8]
                0.32    0.00 44964281/56402520     Mat<float>::getLine() const [23]
                0.08    0.00 44259719/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       1/1810368     Frame<float>::Frame(Frame<float> const&) [92]
                0.00    0.00       7/1810368     void std::_Construct<Mat<float>, Mat<float> >(Mat<float>*, Mat<float> const&) [85]
                0.00    0.00       8/1810368     LSSE3<float>::getResidual(int) [79]
                0.00    0.00      16/1810368     __gnu_cxx::new_allocator<Mat<float> >::construct(Mat<float>*, Mat<float> const&) [75]
                0.00    0.00      20/1810368     main10() [2]
                0.00    0.00      57/1810368     Frame<float>::Frame(Mat<float>, int) [71]
                0.00    0.00      57/1810368     Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00      72/1810368     LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00     168/1810368     void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.00    0.00     192/1810368     Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.00     210/1810368     Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00     224/1810368     OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00     228/1810368     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00    1648/1810368     computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.00    1648/1810368     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.01    0.02   23072/1810368     exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.01    0.03   42532/1810368     Mat<float> expW<float>(Mat<float> const&) [22]
                0.02    0.04   58887/1810368     Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.04    0.10  132720/1810368     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.04    0.10  137312/1810368     Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.05    0.14  183254/1810368     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.05    0.14  188271/1810368     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.07    0.20  265388/1810368     Frame<float>::get(Mat<float> const&) [15]
                0.07    0.20  265388/1810368     Mat<float> sum<float>(Mat<float> const&) [24]
                0.14    0.38  508988/1810368     Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
[13]    25.0    0.51    1.36 1810368         Mat<float>::Mat(Mat<float> const&) [13]
                1.34    0.00 76575447/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00 1810368/56402520     Mat<float>::getLine() const [23]
                0.00    0.00 1810368/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    1.82    1648/1648        main10() [2]
[14]    24.3    0.00    1.82    1648         exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.37    0.42    1648/1704        cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
                0.02    0.51   39552/132694      Frame<float>::get(Mat<float> const&) [15]
                0.01    0.21   92503/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.03    0.13   54384/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.03   19776/188271      Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.00    0.03   18128/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.01    0.02   23072/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.01    0.01   36256/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.01    0.00   19776/19776       Mat<float> absM<float>(Mat<float> const&) [54]
                0.01    0.00  215888/5101635     Mat<float>::~Mat() [27]
                0.00    0.00   18128/68891       void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00   18128/21424       float norme2<float>(Mat<float>) [62]
                0.00    0.00   18128/18128       bool operator< <float>(Mat<float> const&, Mat<float> const&) [65]
                0.00    0.00   59328/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00    4944/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00    4944/4986        cv::Scalar_<double>::Scalar_(double, double, double, double) [112]
                0.00    0.00    1648/1897        cv::Mat::~Mat() [114]
-----------------------------------------------
                0.00    0.02    1648/132694      main10() [2]
                0.00    0.02    1648/132694      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.06    4800/132694      initializeInvDM(Frame<float>*, float) [41]
                0.02    0.51   39552/132694      exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.04    1.11   85046/132694      LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
[15]    23.9    0.06    1.73  132694         Frame<float>::get(Mat<float> const&) [15]
                0.02    0.59  265388/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.04    0.33  265388/265388      Mat<float> sum<float>(Mat<float> const&) [24]
                0.07    0.20  265388/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.18  132694/183254      Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.03    0.04  265388/486082      Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.06    0.00 1194246/5101635     Mat<float>::~Mat() [27]
                0.02    0.03  132694/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.04    0.00 2385130/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.01  132694/175298      Mat<float> transpose<float>(Mat<float> const&) [46]
                0.00    0.02  132694/175226      float norme1<float>(Mat<float>) [48]
                0.02    0.00  265388/329344      std::sqrt(float) [51]
                0.01    0.00  265388/320707      __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float) [56]
                0.01    0.00  540161/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00  132694/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00  265388/265388      std::floor(float) [105]
-----------------------------------------------
                0.00    0.00       8/137312      poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    0.11    9717/137312      LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.48   42523/137312      LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.01    0.96   85064/137312      Mat<float> expMSIM3<float>(Mat<float> const&) [11]
[16]    20.9    0.01    1.55  137312         Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.55    0.82  137312/196199      Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [12]
                0.04    0.10  137312/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.01    0.00  704562/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00 1391122/56402520     Mat<float>::getLine() const [23]
                0.01    0.00  704562/10898299     Mat<float>::set(float, int, int) [36]
                0.01    0.00  137312/5101635     Mat<float>::~Mat() [27]
                0.00    0.00 1253810/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       8/581147      poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    0.00      56/581147      LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.00     128/581147      LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00     128/581147      OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00     324/581147      Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00    1648/581147      computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.02    8240/581147      computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.02    8320/581147      main10() [2]
                0.00    0.02    9845/581147      LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.02    9888/581147      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.11   49065/581147      LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.11   50560/581147      Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.01    0.19   85046/581147      LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.01    0.21   92503/581147      exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.02    0.59  265388/581147      Frame<float>::get(Mat<float> const&) [15]
[17]    17.7    0.03    1.29  581147         Mat<float>::operator=(Mat<float> const&) [17]
                0.46    0.80  581147/581219      Mat<float>::copy(Mat<float> const&) [18]
                0.03    0.00  581147/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    0.00      72/581219      Frame<float>::copyFrame(Frame<float> const&) [70]
                0.46    0.80  581147/581219      Mat<float>::operator=(Mat<float> const&) [17]
[18]    16.9    0.46    0.80  581219         Mat<float>::copy(Mat<float> const&) [18]
                0.79    0.00 45328789/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00  581219/56402520     Mat<float>::getLine() const [23]
                0.00    0.00  581219/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.01    0.01      56/1704        void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.37    0.42    1648/1704        exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[19]    10.8    0.38    0.43    1704         cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
                0.43    0.00 24537600/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00    5112/56402520     Mat<float>::getLine() const [23]
                0.00    0.00    5112/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00  102240/102780      unsigned char* cv::Mat::ptr<unsigned char>(int) [106]
                0.00    0.00    1704/1704        cv::Mat::Mat(int, int, int) [119]
-----------------------------------------------
                0.00    0.00     160/254494      LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00     210/254494      Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.01    3271/254494      LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.01    4944/254494      main10() [2]
                0.00    0.01    4944/254494      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.02    8240/254494      computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.02    8240/254494      computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.02    0.10   42523/254494      LSSE3<float>::proj(Mat<float> const&) [35]
                0.02    0.10   42523/254494      LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.02    0.10   42523/254494      LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.02    0.10   42532/254494      Mat<float> expW<float>(Mat<float> const&) [22]
                0.03    0.13   54384/254494      exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[20]    10.0    0.14    0.61  254494         Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.14    0.38  508988/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.02    0.00  508988/5101635     Mat<float>::~Mat() [27]
                0.01    0.01  254284/254704      void transpose<float>(Mat<float>*) [49]
                0.01    0.00 1051810/10898299     Mat<float>::set(float, int, int) [36]
                0.01    0.00  254284/2291920     Mat<float>::Mat(int, int) [39]
                0.01    0.00 1272050/56402520     Mat<float>::getLine() const [23]
                0.01    0.00 2734504/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00     210/210         Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
-----------------------------------------------
                0.00    0.18   16355/58887       LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.48   42532/58887       Mat<float> expMSIM3<float>(Mat<float> const&) [11]
[21]     8.9    0.00    0.66   58887         Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.24    0.35   58887/196199      Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [12]
                0.02    0.04   58887/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00  186483/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00  422031/56402520     Mat<float>::getLine() const [23]
                0.00    0.00   58887/5101635     Mat<float>::~Mat() [27]
                0.00    0.00  186483/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00  863706/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.02    0.49   42532/42532       Mat<float> expMSIM3<float>(Mat<float> const&) [11]
[22]     6.8    0.02    0.49   42532         Mat<float> expW<float>(Mat<float> const&) [22]
                0.02    0.10   42532/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.12   85064/188271      Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.01    0.06   42532/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.02    0.03  127596/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.01    0.03   42532/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.02    0.00  425320/5101635     Mat<float>::~Mat() [27]
                0.00    0.02   42532/44180       Mat<float> crossProduct<float>(Mat<float> const&) [50]
                0.01    0.00   42532/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00   42532/175298      Mat<float> transpose<float>(Mat<float> const&) [46]
                0.00    0.01   42532/175226      float norme1<float>(Mat<float>) [48]
                0.00    0.00  255192/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   42532/329344      std::sqrt(float) [51]
                0.00    0.00  127596/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00   42532/42532       std::cos(float) [107]
                0.00    0.00   42532/42532       std::sin(float) [108]
-----------------------------------------------
                0.00    0.00       2/56402520     initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00       8/56402520     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00      25/56402520     main10() [2]
                0.00    0.00      32/56402520     bool isnanM<float>(Mat<float>) [80]
                0.00    0.00      57/56402520     Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00      57/56402520     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00      64/56402520     LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00     192/56402520     Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.00     321/56402520     bool operator==<float>(Mat<float> const&, Mat<float> const&) [86]
                0.00    0.00     630/56402520     Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00    3271/56402520     LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.00    5112/56402520     cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
                0.00    0.00    6670/56402520     LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00   21424/56402520     float norme2<float>(Mat<float>) [62]
                0.00    0.00   39552/56402520     Mat<float> absM<float>(Mat<float> const&) [54]
                0.00    0.00   50592/56402520     float max<float>(Mat<float>) [60]
                0.00    0.00   68891/56402520     void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00   88777/56402520     bool operator< <float>(Mat<float> const&, Mat<float> const&) [65]
                0.00    0.00  175226/56402520     float norme1<float>(Mat<float>) [48]
                0.00    0.00  254704/56402520     void transpose<float>(Mat<float>*) [49]
                0.00    0.00  350932/56402520     Mat<float> transpose<float>(Mat<float> const&) [46]
                0.00    0.00  422031/56402520     Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.00    0.00  486082/56402520     Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.00    0.00  530880/56402520     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00  581219/56402520     Mat<float>::copy(Mat<float> const&) [18]
                0.01    0.00  733016/56402520     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.01    0.00  753084/56402520     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.01    0.00  799520/56402520     Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.01    0.00 1272050/56402520     Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.01    0.00 1391122/56402520     Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.01    0.00 1592328/56402520     Mat<float> sum<float>(Mat<float> const&) [24]
                0.01    0.00 1810368/56402520     Mat<float>::Mat(Mat<float> const&) [13]
                0.32    0.00 44964281/56402520     Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [12]
[23]     5.4    0.40    0.00 56402520         Mat<float>::getLine() const [23]
-----------------------------------------------
                0.04    0.33  265388/265388      Frame<float>::get(Mat<float> const&) [15]
[24]     5.0    0.04    0.33  265388         Mat<float> sum<float>(Mat<float> const&) [24]
                0.07    0.20  265388/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.01    0.00  796164/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00  265388/5101635     Mat<float>::~Mat() [27]
                0.01    0.00 1592328/56402520     Mat<float>::getLine() const [23]
                0.01    0.00  265388/2291920     Mat<float>::Mat(int, int) [39]
                0.01    0.00  530776/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00 1061552/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.36   42523/42523       LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [9]
[25]     4.8    0.00    0.36   42523         LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.01    0.19   85046/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.02    0.10   42523/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.01    0.01   42523/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.01    0.00   42523/42523       LSSE3<float>::Z(Mat<float> const&) [53]
                0.00    0.00   85046/5101635     Mat<float>::~Mat() [27]
                0.00    0.00  127569/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00   42523/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00   85046/206509790     Mat<float>::get(int, int) const [8]
-----------------------------------------------
                0.00    0.00       8/188271      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00    1648/188271      computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.03   19776/188271      exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.00    0.06   39252/188271      LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.06   42523/188271      LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
                0.00    0.12   85064/188271      Mat<float> expW<float>(Mat<float> const&) [22]
[26]     3.7    0.01    0.27  188271         Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.05    0.14  188271/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.04    0.00 2017202/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00 1008601/10898299     Mat<float>::set(float, int, int) [36]
                0.01    0.00  188271/5101635     Mat<float>::~Mat() [27]
                0.01    0.00  188271/2291920     Mat<float>::Mat(int, int) [39]
                0.01    0.00  753084/56402520     Mat<float>::getLine() const [23]
                0.00    0.00 1025110/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       8/5101635     OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
                0.00    0.00      16/5101635     LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.00      23/5101635     void std::_Destroy<Mat<float> >(Mat<float>*) [88]
                0.00    0.00      40/5101635     poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    0.00     114/5101635     Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00     128/5101635     OODirectSlamSE3<float>::~OODirectSlamSE3() [77]
                0.00    0.00     168/5101635     void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.00    0.00     192/5101635     LSSE3<float>::~LSSE3() [74]
                0.00    0.00     194/5101635     Frame<float>::~Frame() [78]
                0.00    0.00     210/5101635     Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00     352/5101635     OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00     416/5101635     LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00     876/5101635     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00    4801/5101635     initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00   10043/5101635     main10() [2]
                0.00    0.00   11536/5101635     computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.00   14872/5101635     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00   21424/5101635     computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.00   32678/5101635     LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00   58887/5101635     Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.00    0.00   85046/5101635     LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [9]
                0.00    0.00   85046/5101635     LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.00    0.00  101312/5101635     Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.01    0.00  117756/5101635     LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.01    0.00  127569/5101635     LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [7]
                0.01    0.00  132720/5101635     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.01    0.00  137312/5101635     Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.01    0.00  183254/5101635     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.01    0.00  188271/5101635     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.01    0.00  215888/5101635     exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.01    0.00  255138/5101635     LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.01    0.00  265388/5101635     Mat<float> sum<float>(Mat<float> const&) [24]
                0.02    0.00  340256/5101635     Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.02    0.00  425320/5101635     Mat<float> expW<float>(Mat<float> const&) [22]
                0.02    0.00  508988/5101635     Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.03    0.00  581147/5101635     Mat<float>::operator=(Mat<float> const&) [17]
                0.06    0.00 1194246/5101635     Frame<float>::get(Mat<float> const&) [15]
[27]     3.3    0.25    0.00 5101635         Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    0.07   50560/183254      Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.18  132694/183254      Frame<float>::get(Mat<float> const&) [15]
[28]     3.3    0.00    0.25  183254         Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.05    0.14  183254/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.03    0.00 1466032/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00  733016/10898299     Mat<float>::set(float, int, int) [36]
                0.01    0.00  183254/5101635     Mat<float>::~Mat() [27]
                0.01    0.00  183254/2291920     Mat<float>::Mat(int, int) [39]
                0.01    0.00  733016/56402520     Mat<float>::getLine() const [23]
                0.00    0.00  916270/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.22       8/8           poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
[29]     3.0    0.00    0.22       8         LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.22       8/8           OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
                0.00    0.00      56/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00       8/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00      16/5101635     Mat<float>::~Mat() [27]
                0.00    0.00       8/8           Mat<float>::Mat(int, int, char) [93]
                0.00    0.00     192/386         Mat<float>::Mat() [122]
                0.00    0.00      16/50          std::numeric_limits<float>::epsilon() [146]
                0.00    0.00      16/48          std::pow(float, float) [155]
-----------------------------------------------
                0.00    0.22       8/8           LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
[30]     3.0    0.00    0.22       8         OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
                0.00    0.22       8/8           OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00       8/16          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
                0.00    0.00       8/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00       8/5101635     Mat<float>::~Mat() [27]
                0.00    0.00       8/8           OO<float>::OO() [211]
                0.00    0.00       8/36          std::vector<Mat<float>, std::allocator<Mat<float> > >::begin() [159]
-----------------------------------------------
                0.00    0.22       8/8           OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
[31]     3.0    0.00    0.22       8         OODirectSlamSE3<float>::computePyramid(int) [31]
                0.01    0.21      96/96          Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.00      24/57          Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00     128/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00     224/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00      64/72          Frame<float>::operator=(Frame<float> const&) [69]
                0.00    0.00      48/57          Frame<float>::Frame(Mat<float>, int) [71]
                0.00    0.00     352/5101635     Mat<float>::~Mat() [27]
                0.00    0.00      48/194         Frame<float>::~Frame() [78]
                0.00    0.00       8/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00      48/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00      48/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00     128/386         Mat<float>::Mat() [122]
                0.00    0.00      64/64          Frame<float>::Frame() [138]
                0.00    0.00      48/120         Frame<float>::getChannel() const [125]
-----------------------------------------------
                0.01    0.21      96/96          OODirectSlamSE3<float>::computePyramid(int) [31]
[32]     2.9    0.01    0.21      96         Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.11   50560/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.07   50560/183254      Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.01    0.01   50560/486082      Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.00    0.01   50560/50592       float max<float>(Mat<float>) [60]
                0.00    0.00  101312/5101635     Mat<float>::~Mat() [27]
                0.00    0.00   50560/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00     192/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00      96/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00     192/56402520     Mat<float>::getLine() const [23]
                0.00    0.00     192/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00      32/132720      LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00    1648/132720      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00    1664/132720      main10() [2]
                0.00    0.00    3271/132720      LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00    3296/132720      computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.03   18128/132720      exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.00    0.03   19626/132720      LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.01    0.06   42523/132720      LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.01    0.06   42532/132720      Mat<float> expW<float>(Mat<float> const&) [22]
[33]     2.8    0.02    0.19  132720         Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.04    0.10  132720/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.03    0.00 1565072/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00  782536/10898299     Mat<float>::set(float, int, int) [36]
                0.01    0.00  132720/5101635     Mat<float>::~Mat() [27]
                0.00    0.00  132720/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00  530880/56402520     Mat<float>::getLine() const [23]
                0.00    0.00  849664/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       8/399760      LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.00    1648/399760      computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.00    1696/399760      main10() [2]
                0.00    0.00    3271/399760      LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.00    4944/399760      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00    6592/399760      computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.01    0.01   36256/399760      exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.01    0.01   42523/399760      LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.01    0.01   42532/399760      Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.02    0.03  127596/399760      Mat<float> expW<float>(Mat<float> const&) [22]
                0.02    0.03  132694/399760      Frame<float>::get(Mat<float> const&) [15]
[34]     2.2    0.07    0.09  399760         Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.04    0.00 2337643/206509790     Mat<float>::get(int, int) const [8]
                0.03    0.00 2337643/10898299     Mat<float>::set(float, int, int) [36]
                0.01    0.00  399760/2291920     Mat<float>::Mat(int, int) [39]
                0.01    0.00  799520/56402520     Mat<float>::getLine() const [23]
                0.00    0.00 1462564/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.01    0.13   42523/42523       LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [9]
[35]     1.9    0.01    0.13   42523         LSSE3<float>::proj(Mat<float> const&) [35]
                0.02    0.10   42523/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.01   42523/68891       void homogeneousNormalization<float>(Mat<float>*) [52]
-----------------------------------------------
                0.00    0.00      48/10898299     OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00      48/10898299     Mat<float>::Mat(int, int, char) [93]
                0.00    0.00     104/10898299     Mat<float>::swap(int, int, int, int) [87]
                0.00    0.00    1648/10898299     computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.00    3271/10898299     LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [66]
                0.00    0.00    3784/10898299     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00    5066/10898299     initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00    5430/10898299     main10() [2]
                0.00    0.00    6210/10898299     Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00   19259/10898299     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00   19776/10898299     Mat<float> absM<float>(Mat<float> const&) [54]
                0.00    0.00   22897/10898299     Mat<float> Line<float>(Mat<float> const&, int) [61]
                0.00    0.00   35981/10898299     LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.00   43200/10898299     Mat<float> cv2Matp<float>(cv::Mat) [67]
                0.00    0.00   50560/10898299     Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.00  109223/10898299     LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00  127569/10898299     LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.00    0.00  127596/10898299     Mat<float> expW<float>(Mat<float> const&) [22]
                0.00    0.00  186483/10898299     Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.00    0.00  206673/10898299     void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00  265080/10898299     Mat<float> crossProduct<float>(Mat<float> const&) [50]
                0.00    0.00  299614/10898299     Mat<float> transpose<float>(Mat<float> const&) [46]
                0.01    0.00  530776/10898299     Mat<float> sum<float>(Mat<float> const&) [24]
                0.01    0.00  540161/10898299     Frame<float>::get(Mat<float> const&) [15]
                0.01    0.00  704562/10898299     Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.01    0.00  733016/10898299     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.01    0.00  782536/10898299     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.01    0.00 1008601/10898299     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.01    0.00 1051810/10898299     Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.02    0.00 1669674/10898299     Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.03    0.00 2337643/10898299     Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
[36]     1.9    0.14    0.00 10898299         Mat<float>::set(float, int, int) [36]
-----------------------------------------------
                0.00    0.00       8/486082      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00      16/486082      main10() [2]
                0.01    0.01   50560/486082      Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.01    0.01   85046/486082      LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.01    0.01   85064/486082      Mat<float> expMSIM3<float>(Mat<float> const&) [11]
                0.03    0.04  265388/486082      Frame<float>::get(Mat<float> const&) [15]
[37]     1.7    0.05    0.07  486082         Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.03    0.00 1669674/206509790     Mat<float>::get(int, int) const [8]
                0.02    0.00 1669674/10898299     Mat<float>::set(float, int, int) [36]
                0.02    0.00  486082/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00  486082/56402520     Mat<float>::getLine() const [23]
                0.00    0.00 1010060/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       8/58910234     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00      57/58910234     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00      61/58910234     initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00      64/58910234     LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00     192/58910234     bool isnanM<float>(Mat<float>) [80]
                0.00    0.00     192/58910234     Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.00     327/58910234     bool operator==<float>(Mat<float> const&, Mat<float> const&) [86]
                0.00    0.00     497/58910234     main10() [2]
                0.00    0.00    1888/58910234     LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00    5112/58910234     cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
                0.00    0.00    6542/58910234     Mat<float> Line<float>(Mat<float> const&, int) [61]
                0.00    0.00    7740/58910234     Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00   21424/58910234     float norme2<float>(Mat<float>) [62]
                0.00    0.00   39552/58910234     Mat<float> absM<float>(Mat<float> const&) [54]
                0.00    0.00   50592/58910234     float max<float>(Mat<float>) [60]
                0.00    0.00   68891/58910234     void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00   88777/58910234     bool operator< <float>(Mat<float> const&, Mat<float> const&) [65]
                0.00    0.00  175226/58910234     float norme1<float>(Mat<float>) [48]
                0.00    0.00  263950/58910234     void transpose<float>(Mat<float>*) [49]
                0.00    0.00  350596/58910234     Mat<float> transpose<float>(Mat<float> const&) [46]
                0.00    0.00  581219/58910234     Mat<float>::copy(Mat<float> const&) [18]
                0.00    0.00  849664/58910234     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00  863706/58910234     Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [21]
                0.00    0.00  916270/58910234     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.00    0.00 1010060/58910234     Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.00    0.00 1025110/58910234     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.00    0.00 1061552/58910234     Mat<float> sum<float>(Mat<float> const&) [24]
                0.00    0.00 1253810/58910234     Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [16]
                0.00    0.00 1462564/58910234     Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00 1810368/58910234     Mat<float>::Mat(Mat<float> const&) [13]
                0.01    0.00 2734504/58910234     Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.08    0.00 44259719/58910234     Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [12]
[38]     1.5    0.11    0.00 58910234         Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       3/2291920     main10() [2]
                0.00    0.00       9/2291920     Mat<float> cv2Matp<float>(cv::Mat) [67]
                0.00    0.00      16/2291920     debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00      32/2291920     LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00     114/2291920     Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00     210/2291920     Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00    4944/2291920     exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.00    0.00    6542/2291920     Mat<float> Line<float>(Mat<float> const&, int) [61]
                0.00    0.00   19776/2291920     Mat<float> absM<float>(Mat<float> const&) [54]
                0.00    0.00   42523/2291920     LSSE3<float>::retroproj(Mat<float> const&) [25]
                0.00    0.00  132694/2291920     Frame<float>::get(Mat<float> const&) [15]
                0.00    0.00  132720/2291920     Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.01    0.00  175298/2291920     Mat<float> transpose<float>(Mat<float> const&) [46]
                0.01    0.00  183254/2291920     Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&) [28]
                0.01    0.00  188271/2291920     Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.01    0.00  254284/2291920     Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.01    0.00  265388/2291920     Mat<float> sum<float>(Mat<float> const&) [24]
                0.01    0.00  399760/2291920     Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.02    0.00  486082/2291920     Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
[39]     1.1    0.09    0.00 2291920         Mat<float>::Mat(int, int) [39]
-----------------------------------------------
                0.00    0.08       8/8           main10() [2]
[40]     1.0    0.00    0.08       8         debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.02    9888/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.02    1648/132694      Frame<float>::get(Mat<float> const&) [15]
                0.00    0.01    4944/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.01       8/24          void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.00    0.00    1648/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00    4944/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00    1648/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00   49936/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   14872/5101635     Mat<float>::~Mat() [27]
                0.00    0.00    1648/21424       float norme2<float>(Mat<float>) [62]
                0.00    0.00    3784/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00       8/188271      Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.00    0.00       8/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00       8/486082      Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [37]
                0.00    0.00      16/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00       8/56402520     Mat<float>::getLine() const [23]
                0.00    0.00       8/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.07       1/1           main10() [2]
[41]     0.9    0.00    0.07       1         initializeInvDM(Frame<float>*, float) [41]
                0.00    0.06    4800/132694      Frame<float>::get(Mat<float> const&) [15]
                0.00    0.00    4801/5101635     Mat<float>::~Mat() [27]
                0.00    0.00    4800/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00    4800/689939      float fabs_<float>(float) [59]
                0.00    0.00    5066/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00       2/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00      61/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00       2/56402520     Mat<float>::getLine() const [23]
                0.00    0.00     206/206         NormalRand::dev() [123]
                0.00    0.00       1/1           NormalRand::NormalRand(double, double, long) [214]
-----------------------------------------------
                0.00    0.00       1/221536      __static_initialization_and_destruction_0(int, int) [97]
                0.00    0.00       2/221536      initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00       8/221536      debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00       8/221536      OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
                0.00    0.00       8/221536      OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00      16/221536      poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.00    0.00      22/221536      main10() [2]
                0.00    0.00      32/221536      LSSE3<float>::computePyramidResidualA(int) [5]
                0.00    0.00      57/221536      Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00      64/221536      LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00      96/221536      Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
                0.00    0.00     381/221536      Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00    3271/221536      LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.00    3271/221536      LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [66]
                0.01    0.00   42523/221536      LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [10]
                0.01    0.00   42532/221536      Mat<float> expW<float>(Mat<float> const&) [22]
                0.01    0.00   44180/221536      Mat<float> crossProduct<float>(Mat<float> const&) [50]
                0.02    0.00   85064/221536      Mat<float> expMSIM3<float>(Mat<float> const&) [11]
[42]     0.9    0.07    0.00  221536         Mat<float>::Mat(float, int, int) [42]
-----------------------------------------------
                0.00    0.06    1648/1648        main10() [2]
[43]     0.8    0.00    0.06    1648         computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.02    8240/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.02    8240/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00    3296/132720      Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&) [33]
                0.00    0.00    6592/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00    1648/188271      Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&) [26]
                0.00    0.00    1648/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00   21424/5101635     Mat<float>::~Mat() [27]
                0.00    0.00    3296/68891       void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00    1648/21424       float norme2<float>(Mat<float>) [62]
                0.00    0.00    9888/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00    1648/10898299     Mat<float>::set(float, int, int) [36]
-----------------------------------------------
                                                 <spontaneous>
[44]     0.6    0.04    0.00                 void DrawCircle<float>(Mat<float>*, int, int, int, float) [44]
-----------------------------------------------
                0.00    0.03    1648/1648        main10() [2]
[45]     0.4    0.00    0.03    1648         computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.02    8240/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.00    1648/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00    1648/44180       Mat<float> crossProduct<float>(Mat<float> const&) [50]
                0.00    0.00    1648/399760      Mat<float> operator*<float>(float const&, Mat<float> const&) [34]
                0.00    0.00   11536/5101635     Mat<float>::~Mat() [27]
                0.00    0.00    1648/68891       void homogeneousNormalization<float>(Mat<float>*) [52]
-----------------------------------------------
                0.00    0.00       8/175298      main10() [2]
                0.00    0.00      64/175298      LSSE3<float>::energy(Mat<float>) [4]
                0.00    0.00   42532/175298      Mat<float> expW<float>(Mat<float> const&) [22]
                0.01    0.01  132694/175298      Frame<float>::get(Mat<float> const&) [15]
[46]     0.4    0.01    0.02  175298         Mat<float> transpose<float>(Mat<float> const&) [46]
                0.01    0.00  175298/2291920     Mat<float>::Mat(int, int) [39]
                0.01    0.00  299614/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00  299614/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00  350932/56402520     Mat<float>::getLine() const [23]
                0.00    0.00  350596/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.01       8/24          debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.02      16/24          main10() [2]
[47]     0.4    0.00    0.03      24         void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.01    0.01      56/1704        cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
                0.00    0.00     168/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00     168/5101635     Mat<float>::~Mat() [27]
                0.00    0.00      56/1897        cv::Mat::~Mat() [114]
                0.00    0.00      24/24          afficher(std::string, cv::Mat*, cv::Mat*, cv::Mat*, bool, float) [172]
-----------------------------------------------
                0.00    0.01   42532/175226      Mat<float> expW<float>(Mat<float> const&) [22]
                0.00    0.02  132694/175226      Frame<float>::get(Mat<float> const&) [15]
[48]     0.3    0.00    0.02  175226         float norme1<float>(Mat<float>) [48]
                0.01    0.00  658372/206509790     Mat<float>::get(int, int) const [8]
                0.01    0.00  658372/689939      float fabs_<float>(float) [59]
                0.00    0.00  175226/56402520     Mat<float>::getLine() const [23]
                0.00    0.00  175226/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00     420/254704      Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.01    0.01  254284/254704      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
[49]     0.3    0.01    0.01  254704         void transpose<float>(Mat<float>*) [49]
                0.01    0.00  957422/957422      void std::swap<float>(float&, float&) [58]
                0.00    0.00  254704/56402520     Mat<float>::getLine() const [23]
                0.00    0.00  263950/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00    1648/44180       computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.02   42532/44180       Mat<float> expW<float>(Mat<float> const&) [22]
[50]     0.3    0.00    0.02   44180         Mat<float> crossProduct<float>(Mat<float> const&) [50]
                0.01    0.00   44180/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00  265080/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00  265080/10898299     Mat<float>::set(float, int, int) [36]
-----------------------------------------------
                0.00    0.00   21424/329344      float norme2<float>(Mat<float>) [62]
                0.00    0.00   42532/329344      Mat<float> expW<float>(Mat<float> const&) [22]
                0.02    0.00  265388/329344      Frame<float>::get(Mat<float> const&) [15]
[51]     0.3    0.02    0.00  329344         std::sqrt(float) [51]
-----------------------------------------------
                0.00    0.00    1648/68891       computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [45]
                0.00    0.00    3296/68891       computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.00    3296/68891       main10() [2]
                0.00    0.00   18128/68891       exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
                0.00    0.01   42523/68891       LSSE3<float>::proj(Mat<float> const&) [35]
[52]     0.2    0.01    0.01   68891         void homogeneousNormalization<float>(Mat<float>*) [52]
                0.00    0.00  275564/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00  206673/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00   68891/56402520     Mat<float>::getLine() const [23]
                0.00    0.00   68891/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.01    0.00   42523/42523       LSSE3<float>::retroproj(Mat<float> const&) [25]
[53]     0.2    0.01    0.00   42523         LSSE3<float>::Z(Mat<float> const&) [53]
                0.00    0.00  127569/206509790     Mat<float>::get(int, int) const [8]
-----------------------------------------------
                0.01    0.00   19776/19776       exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[54]     0.2    0.01    0.00   19776         Mat<float> absM<float>(Mat<float> const&) [54]
                0.00    0.00   19776/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00   19776/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   19776/689939      float fabs_<float>(float) [59]
                0.00    0.00   39552/56402520     Mat<float>::getLine() const [23]
                0.00    0.00   19776/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00   39552/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       8/17          poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
                0.01    0.00       9/17          main10() [2]
[55]     0.1    0.01    0.00      17         Mat<float>::afficher() [55]
                0.00    0.00     192/206509790     Mat<float>::get(int, int) const [8]
-----------------------------------------------
                0.00    0.00    3271/320707      LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [6]
                0.00    0.00   52048/320707      LSSE3<float>::computePyramidResidualA(int) [5]
                0.01    0.00  265388/320707      Frame<float>::get(Mat<float> const&) [15]
[56]     0.1    0.01    0.00  320707         __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float) [56]
-----------------------------------------------
                                                 <spontaneous>
[57]     0.1    0.01    0.00                 float mean<float>(Mat<float>) [57]
-----------------------------------------------
                0.01    0.00  957422/957422      void transpose<float>(Mat<float>*) [49]
[58]     0.1    0.01    0.00  957422         void std::swap<float>(float&, float&) [58]
-----------------------------------------------
                0.00    0.00    3271/689939      LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [66]
                0.00    0.00    3720/689939      Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00    4800/689939      initializeInvDM(Frame<float>*, float) [41]
                0.00    0.00   19776/689939      Mat<float> absM<float>(Mat<float> const&) [54]
                0.01    0.00  658372/689939      float norme1<float>(Mat<float>) [48]
[59]     0.1    0.01    0.00  689939         float fabs_<float>(float) [59]
-----------------------------------------------
                0.00    0.00      32/50592       main10() [2]
                0.00    0.01   50560/50592       Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [32]
[60]     0.1    0.00    0.01   50592         float max<float>(Mat<float>) [60]
                0.01    0.00  406432/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   50592/56402520     Mat<float>::getLine() const [23]
                0.00    0.00   50592/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.01    0.00    6542/6542        LSSE3<float>::computePyramidResidualA(int) [5]
[61]     0.1    0.01    0.00    6542         Mat<float> Line<float>(Mat<float> const&, int) [61]
                0.00    0.00   22897/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   22897/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00    6542/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00    6542/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00    1648/21424       computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [43]
                0.00    0.00    1648/21424       debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [40]
                0.00    0.00   18128/21424       exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[62]     0.1    0.00    0.00   21424         float norme2<float>(Mat<float>) [62]
                0.00    0.00  128544/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   21424/329344      std::sqrt(float) [51]
                0.00    0.00   21424/56402520     Mat<float>::getLine() const [23]
                0.00    0.00   21424/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00       1/57          main10() [2]
                0.00    0.00      24/57          OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00      32/57          LSSE3<float>::energy(Mat<float>) [4]
[63]     0.0    0.00    0.00      57         Mat<float> invGJ<float>(Mat<float>, int) [63]
                0.00    0.00      57/57          Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00      57/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00      57/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00     114/5101635     Mat<float>::~Mat() [27]
                0.00    0.00      57/56402520     Mat<float>::getLine() const [23]
-----------------------------------------------
                0.00    0.00      57/57          Mat<float> invGJ<float>(Mat<float>, int) [63]
[64]     0.0    0.00    0.00      57         Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
                0.00    0.00   45126/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00     324/581147      Mat<float>::operator=(Mat<float> const&) [17]
                0.00    0.00     210/254494      Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
                0.00    0.00   19259/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00     228/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00     381/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00    3720/689939      float fabs_<float>(float) [59]
                0.00    0.00     876/5101635     Mat<float>::~Mat() [27]
                0.00    0.00     114/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00      52/52          Mat<float>::swap(int, int, int, int) [87]
                0.00    0.00      57/56402520     Mat<float>::getLine() const [23]
                0.00    0.00      57/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00   18128/18128       exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[65]     0.0    0.00    0.00   18128         bool operator< <float>(Mat<float> const&, Mat<float> const&) [65]
                0.00    0.00   36256/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00   88777/56402520     Mat<float>::getLine() const [23]
                0.00    0.00   88777/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00    3271/3271        LSSE3<float>::computePyramidResidualA(int) [5]
[66]     0.0    0.00    0.00    3271         LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [66]
                0.00    0.00    3271/221536      Mat<float>::Mat(float, int, int) [42]
                0.00    0.00   19626/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00    3271/689939      float fabs_<float>(float) [59]
                0.00    0.00    3271/10898299     Mat<float>::set(float, int, int) [36]
-----------------------------------------------
                0.00    0.00       9/9           main10() [2]
[67]     0.0    0.00    0.00       9         Mat<float> cv2Matp<float>(cv::Mat) [67]
                0.00    0.00   43200/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00       9/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00     540/102780      unsigned char* cv::Mat::ptr<unsigned char>(int) [106]
                0.00    0.00       9/18          cv::Mat::channels() const [184]
-----------------------------------------------
                0.00    0.00     210/210         Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&) [20]
[68]     0.0    0.00    0.00     210         Mat<float> product<float>(Mat<float>*, Mat<float>*) [68]
                0.00    0.00     210/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00    6210/10898299     Mat<float>::set(float, int, int) [36]
                0.00    0.00     420/254704      void transpose<float>(Mat<float>*) [49]
                0.00    0.00    7740/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00     210/5101635     Mat<float>::~Mat() [27]
                0.00    0.00     210/2291920     Mat<float>::Mat(int, int) [39]
                0.00    0.00     630/56402520     Mat<float>::getLine() const [23]
-----------------------------------------------
                0.00    0.00       8/72          main10() [2]
                0.00    0.00      64/72          OODirectSlamSE3<float>::computePyramid(int) [31]
[69]     0.0    0.00    0.00      72         Frame<float>::operator=(Frame<float> const&) [69]
                0.00    0.00      72/72          Frame<float>::copyFrame(Frame<float> const&) [70]
                0.00    0.00      72/194         Frame<float>::~Frame() [78]
-----------------------------------------------
                0.00    0.00      72/72          Frame<float>::operator=(Frame<float> const&) [69]
[70]     0.0    0.00    0.00      72         Frame<float>::copyFrame(Frame<float> const&) [70]
                0.00    0.00      72/581219      Mat<float>::copy(Mat<float> const&) [18]
                0.00    0.00      72/120         Frame<float>::getChannel() const [125]
-----------------------------------------------
                0.00    0.00       9/57          main10() [2]
                0.00    0.00      48/57          OODirectSlamSE3<float>::computePyramid(int) [31]
[71]     0.0    0.00    0.00      57         Frame<float>::Frame(Mat<float>, int) [71]
                0.00    0.00      57/1810368     Mat<float>::Mat(Mat<float> const&) [13]
-----------------------------------------------
                0.00    0.00       8/16          main10() [2]
                0.00    0.00       8/16          OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
[72]     0.0    0.00    0.00      16         std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
                0.00    0.00      12/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
                0.00    0.00       4/16          void __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::construct<Mat<float> >(std::allocator<Mat<float> >&, Mat<float>*, Mat<float> const&) [76]
                0.00    0.00      16/36          std::vector<Mat<float>, std::allocator<Mat<float> > >::begin() [159]
                0.00    0.00      16/28          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::difference_type __gnu_cxx::operator-<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [169]
                0.00    0.00      16/64          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::__normal_iterator(Mat<float>* const&) [139]
                0.00    0.00       4/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::end() [190]
                0.00    0.00       4/4           bool __gnu_cxx::operator==<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [212]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
[73]     0.0    0.00    0.00      12         std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
                0.00    0.00      12/16          void __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::construct<Mat<float> >(std::allocator<Mat<float> >&, Mat<float>*, Mat<float> const&) [76]
                0.00    0.00      24/24          Mat<float>* std::__uninitialized_move_if_noexcept_a<Mat<float>*, Mat<float>*, std::allocator<Mat<float> > >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [84]
                0.00    0.00      12/21          void std::_Destroy<Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [91]
                0.00    0.00      36/45          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() [156]
                0.00    0.00      24/88          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::base() const [131]
                0.00    0.00      12/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const [188]
                0.00    0.00      12/36          std::vector<Mat<float>, std::allocator<Mat<float> > >::begin() [159]
                0.00    0.00      12/28          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::difference_type __gnu_cxx::operator-<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [169]
                0.00    0.00      12/12          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_allocate(unsigned int) [189]
                0.00    0.00      12/21          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_deallocate(Mat<float>*, unsigned int) [182]
-----------------------------------------------
                0.00    0.00       8/8           poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
[74]     0.0    0.00    0.00       8         LSSE3<float>::~LSSE3() [74]
                0.00    0.00       8/8           OODirectSlamSE3<float>::~OODirectSlamSE3() [77]
                0.00    0.00     192/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    0.00      16/16          void __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::construct<Mat<float> >(std::allocator<Mat<float> >&, Mat<float>*, Mat<float> const&) [76]
[75]     0.0    0.00    0.00      16         __gnu_cxx::new_allocator<Mat<float> >::construct(Mat<float>*, Mat<float> const&) [75]
                0.00    0.00      16/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00      16/75          operator new(unsigned int, void*) [134]
-----------------------------------------------
                0.00    0.00       4/16          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
                0.00    0.00      12/16          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[76]     0.0    0.00    0.00      16         void __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::construct<Mat<float> >(std::allocator<Mat<float> >&, Mat<float>*, Mat<float> const&) [76]
                0.00    0.00      16/16          __gnu_cxx::new_allocator<Mat<float> >::construct(Mat<float>*, Mat<float> const&) [75]
-----------------------------------------------
                0.00    0.00       8/8           LSSE3<float>::~LSSE3() [74]
[77]     0.0    0.00    0.00       8         OODirectSlamSE3<float>::~OODirectSlamSE3() [77]
                0.00    0.00     128/5101635     Mat<float>::~Mat() [27]
                0.00    0.00      64/194         Frame<float>::~Frame() [78]
                0.00    0.00       8/8           OO<float>::~OO() [95]
-----------------------------------------------
                0.00    0.00      10/194         main10() [2]
                0.00    0.00      48/194         OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00      64/194         OODirectSlamSE3<float>::~OODirectSlamSE3() [77]
                0.00    0.00      72/194         Frame<float>::operator=(Frame<float> const&) [69]
[78]     0.0    0.00    0.00     194         Frame<float>::~Frame() [78]
                0.00    0.00     194/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    0.00       8/8           poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [3]
[79]     0.0    0.00    0.00       8         LSSE3<float>::getResidual(int) [79]
                0.00    0.00       8/1810368     Mat<float>::Mat(Mat<float> const&) [13]
-----------------------------------------------
                0.00    0.00      32/32          LSSE3<float>::energy(Mat<float>) [4]
[80]     0.0    0.00    0.00      32         bool isnanM<float>(Mat<float>) [80]
                0.00    0.00     384/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00     192/58910234     Mat<float>::getColumn() const [38]
                0.00    0.00      32/56402520     Mat<float>::getLine() const [23]
-----------------------------------------------
                0.00    0.00      24/24          Mat<float>* std::uninitialized_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [82]
[81]     0.0    0.00    0.00      24         Mat<float>* std::__uninitialized_copy<false>::__uninit_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [81]
                0.00    0.00       7/7           void std::_Construct<Mat<float>, Mat<float> >(Mat<float>*, Mat<float> const&) [85]
                0.00    0.00       7/30          Mat<float>* std::__addressof<Mat<float> >(Mat<float>&) [166]
-----------------------------------------------
                0.00    0.00      24/24          Mat<float>* std::__uninitialized_copy_a<Mat<float>*, Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [83]
[82]     0.0    0.00    0.00      24         Mat<float>* std::uninitialized_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [82]
                0.00    0.00      24/24          Mat<float>* std::__uninitialized_copy<false>::__uninit_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [81]
-----------------------------------------------
                0.00    0.00      24/24          Mat<float>* std::__uninitialized_move_if_noexcept_a<Mat<float>*, Mat<float>*, std::allocator<Mat<float> > >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [84]
[83]     0.0    0.00    0.00      24         Mat<float>* std::__uninitialized_copy_a<Mat<float>*, Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [83]
                0.00    0.00      24/24          Mat<float>* std::uninitialized_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [82]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[84]     0.0    0.00    0.00      24         Mat<float>* std::__uninitialized_move_if_noexcept_a<Mat<float>*, Mat<float>*, std::allocator<Mat<float> > >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [84]
                0.00    0.00      24/24          Mat<float>* std::__uninitialized_copy_a<Mat<float>*, Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [83]
-----------------------------------------------
                0.00    0.00       7/7           Mat<float>* std::__uninitialized_copy<false>::__uninit_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [81]
[85]     0.0    0.00    0.00       7         void std::_Construct<Mat<float>, Mat<float> >(Mat<float>*, Mat<float> const&) [85]
                0.00    0.00       7/1810368     Mat<float>::Mat(Mat<float> const&) [13]
                0.00    0.00       7/75          operator new(unsigned int, void*) [134]
-----------------------------------------------
                0.00    0.00      64/64          LSSE3<float>::energy(Mat<float>) [4]
[86]     0.0    0.00    0.00      64         bool operator==<float>(Mat<float> const&, Mat<float> const&) [86]
                0.00    0.00     140/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00     321/56402520     Mat<float>::getLine() const [23]
                0.00    0.00     327/58910234     Mat<float>::getColumn() const [38]
-----------------------------------------------
                0.00    0.00      52/52          Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [64]
[87]     0.0    0.00    0.00      52         Mat<float>::swap(int, int, int, int) [87]
                0.00    0.00     104/206509790     Mat<float>::get(int, int) const [8]
                0.00    0.00     104/10898299     Mat<float>::set(float, int, int) [36]
-----------------------------------------------
                0.00    0.00      23/23          void std::_Destroy_aux<false>::__destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [89]
[88]     0.0    0.00    0.00      23         void std::_Destroy<Mat<float> >(Mat<float>*) [88]
                0.00    0.00      23/5101635     Mat<float>::~Mat() [27]
-----------------------------------------------
                0.00    0.00      21/21          void std::_Destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [90]
[89]     0.0    0.00    0.00      21         void std::_Destroy_aux<false>::__destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [89]
                0.00    0.00      23/23          void std::_Destroy<Mat<float> >(Mat<float>*) [88]
                0.00    0.00      23/30          Mat<float>* std::__addressof<Mat<float> >(Mat<float>&) [166]
-----------------------------------------------
                0.00    0.00      21/21          void std::_Destroy<Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [91]
[90]     0.0    0.00    0.00      21         void std::_Destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [90]
                0.00    0.00      21/21          void std::_Destroy_aux<false>::__destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [89]
-----------------------------------------------
                0.00    0.00       9/21          std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector() [94]
                0.00    0.00      12/21          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[91]     0.0    0.00    0.00      21         void std::_Destroy<Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [91]
                0.00    0.00      21/21          void std::_Destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [90]
-----------------------------------------------
                0.00    0.00       1/1           main10() [2]
[92]     0.0    0.00    0.00       1         Frame<float>::Frame(Frame<float> const&) [92]
                0.00    0.00       1/1810368     Mat<float>::Mat(Mat<float> const&) [13]
-----------------------------------------------
                0.00    0.00       8/8           LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
[93]     0.0    0.00    0.00       8         Mat<float>::Mat(int, int, char) [93]
                0.00    0.00      48/10898299     Mat<float>::set(float, int, int) [36]
-----------------------------------------------
                0.00    0.00       1/9           main10() [2]
                0.00    0.00       8/9           OO<float>::~OO() [95]
[94]     0.0    0.00    0.00       9         std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector() [94]
                0.00    0.00       9/21          void std::_Destroy<Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&) [91]
                0.00    0.00       9/45          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() [156]
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::~_Vector_base() [209]
-----------------------------------------------
                0.00    0.00       8/8           OODirectSlamSE3<float>::~OODirectSlamSE3() [77]
[95]     0.0    0.00    0.00       8         OO<float>::~OO() [95]
                0.00    0.00       8/9           std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector() [94]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [98]
[96]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z4absMRKN2cv3MatE [96]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [97]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z4absMRKN2cv3MatE [96]
[97]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [97]
                0.00    0.00       1/221536      Mat<float>::Mat(float, int, int) [42]
-----------------------------------------------
                                                 <spontaneous>
[98]     0.0    0.00    0.00                 __libc_csu_init [98]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z4absMRKN2cv3MatE [96]
-----------------------------------------------
                0.00    0.00  265388/265388      Frame<float>::get(Mat<float> const&) [15]
[105]    0.0    0.00    0.00  265388         std::floor(float) [105]
-----------------------------------------------
                0.00    0.00     540/102780      Mat<float> cv2Matp<float>(cv::Mat) [67]
                0.00    0.00  102240/102780      cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
[106]    0.0    0.00    0.00  102780         unsigned char* cv::Mat::ptr<unsigned char>(int) [106]
-----------------------------------------------
                0.00    0.00   42532/42532       Mat<float> expW<float>(Mat<float> const&) [22]
[107]    0.0    0.00    0.00   42532         std::cos(float) [107]
-----------------------------------------------
                0.00    0.00   42532/42532       Mat<float> expW<float>(Mat<float> const&) [22]
[108]    0.0    0.00    0.00   42532         std::sin(float) [108]
-----------------------------------------------
                0.00    0.00    6632/6632        main10() [2]
[109]    0.0    0.00    0.00    6632         cv::Point_<int>::Point_(int, int) [109]
-----------------------------------------------
                0.00    0.00    4986/4986        cv::Scalar_<double>::Scalar_(double, double, double, double) [112]
[110]    0.0    0.00    0.00    4986         cv::Vec<double, 4>::Vec() [110]
                0.00    0.00    4986/4986        cv::Matx<double, 4, 1>::Matx() [111]
-----------------------------------------------
                0.00    0.00    4986/4986        cv::Vec<double, 4>::Vec() [110]
[111]    0.0    0.00    0.00    4986         cv::Matx<double, 4, 1>::Matx() [111]
-----------------------------------------------
                0.00    0.00      42/4986        main10() [2]
                0.00    0.00    4944/4986        exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[112]    0.0    0.00    0.00    4986         cv::Scalar_<double>::Scalar_(double, double, double, double) [112]
                0.00    0.00    4986/4986        cv::Vec<double, 4>::Vec() [110]
-----------------------------------------------
                0.00    0.00    1897/1897        cv::Mat::~Mat() [114]
[113]    0.0    0.00    0.00    1897         cv::Mat::release() [113]
-----------------------------------------------
                0.00    0.00       2/1897        main [1]
                0.00    0.00      13/1897        main10() [2]
                0.00    0.00      18/1897        computeGradient(cv::Mat*) [201]
                0.00    0.00      52/1897        void std::_Destroy<cv::Mat>(cv::Mat*) [145]
                0.00    0.00      56/1897        void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
                0.00    0.00     108/1897        cv::MatExpr::~MatExpr() [157]
                0.00    0.00    1648/1897        exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [14]
[114]    0.0    0.00    0.00    1897         cv::Mat::~Mat() [114]
                0.00    0.00    1897/1897        cv::Mat::release() [113]
-----------------------------------------------
                0.00    0.00      31/1787        cv::Mat::Mat() [165]
                0.00    0.00      52/1787        cv::Mat::Mat(cv::Mat const&) [143]
                0.00    0.00    1704/1787        cv::Mat::Mat(int, int, int) [119]
[115]    0.0    0.00    0.00    1787         cv::Mat::MSize::MSize(int*) [115]
-----------------------------------------------
                0.00    0.00      31/1787        cv::Mat::Mat() [165]
                0.00    0.00      52/1787        cv::Mat::Mat(cv::Mat const&) [143]
                0.00    0.00    1704/1787        cv::Mat::Mat(int, int, int) [119]
[116]    0.0    0.00    0.00    1787         cv::Mat::MStep::MStep() [116]
-----------------------------------------------
                0.00    0.00      31/1735        cv::Mat::Mat() [165]
                0.00    0.00    1704/1735        cv::Mat::Mat(int, int, int) [119]
[117]    0.0    0.00    0.00    1735         cv::Mat::initEmpty() [117]
-----------------------------------------------
                0.00    0.00    1704/1704        cv::Mat::Mat(int, int, int) [119]
[118]    0.0    0.00    0.00    1704         cv::Mat::create(int, int, int) [118]
-----------------------------------------------
                0.00    0.00    1704/1704        cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [19]
[119]    0.0    0.00    0.00    1704         cv::Mat::Mat(int, int, int) [119]
                0.00    0.00    1704/1787        cv::Mat::MSize::MSize(int*) [115]
                0.00    0.00    1704/1787        cv::Mat::MStep::MStep() [116]
                0.00    0.00    1704/1735        cv::Mat::initEmpty() [117]
                0.00    0.00    1704/1704        cv::Mat::create(int, int, int) [118]
-----------------------------------------------
                0.00    0.00    1648/1648        main10() [2]
[120]    0.0    0.00    0.00    1648         std::abs(float) [120]
-----------------------------------------------
                0.00    0.00    1522/1522        NormalRand::dev() [123]
[121]    0.0    0.00    0.00    1522         Ranfib::doub() [121]
-----------------------------------------------
                0.00    0.00       2/386         main10() [2]
                0.00    0.00      64/386         Frame<float>::Frame() [138]
                0.00    0.00     128/386         OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00     192/386         LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
[122]    0.0    0.00    0.00     386         Mat<float>::Mat() [122]
-----------------------------------------------
                0.00    0.00     206/206         initializeInvDM(Frame<float>*, float) [41]
[123]    0.0    0.00    0.00     206         NormalRand::dev() [123]
                0.00    0.00    1522/1522        Ranfib::doub() [121]
-----------------------------------------------
                0.00    0.00       8/160         bool __gnu_cxx::operator==<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [213]
                0.00    0.00      48/160         std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
                0.00    0.00     104/160         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [144]
[124]    0.0    0.00    0.00     160         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const [124]
-----------------------------------------------
                0.00    0.00      48/120         OODirectSlamSE3<float>::computePyramid(int) [31]
                0.00    0.00      72/120         Frame<float>::copyFrame(Frame<float> const&) [70]
[125]    0.0    0.00    0.00     120         Frame<float>::getChannel() const [125]
-----------------------------------------------
                0.00    0.00      14/112         std::vector<cv::Mat, std::allocator<cv::Mat> >::end() [185]
                0.00    0.00      28/112         std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
                0.00    0.00      70/112         std::vector<cv::Mat, std::allocator<cv::Mat> >::begin() [137]
[126]    0.0    0.00    0.00     112         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&) [126]
-----------------------------------------------
                0.00    0.00       9/107         main10() [2]
                0.00    0.00      18/107         computeGradient(cv::Mat*) [201]
                0.00    0.00      80/107         afficher(std::string, cv::Mat*, cv::Mat*, cv::Mat*, bool, float) [172]
[127]    0.0    0.00    0.00     107         cv::Size_<int>::Size_(int, int) [127]
-----------------------------------------------
                0.00    0.00     104/104         cv::Mat::Mat(cv::Mat const&) [143]
[128]    0.0    0.00    0.00     104         cv::Mat::MStep::operator[](int) [128]
-----------------------------------------------
                0.00    0.00     104/104         cv::Mat::Mat(cv::Mat const&) [143]
[129]    0.0    0.00    0.00     104         cv::Mat::MStep::operator[](int) const [129]
-----------------------------------------------
                0.00    0.00      96/96          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const [178]
[130]    0.0    0.00    0.00      96         std::vector<cv::Mat, std::allocator<cv::Mat> >::size() const [130]
-----------------------------------------------
                0.00    0.00       8/88          bool __gnu_cxx::operator==<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [212]
                0.00    0.00      24/88          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
                0.00    0.00      56/88          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::difference_type __gnu_cxx::operator-<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [169]
[131]    0.0    0.00    0.00      88         __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::base() const [131]
-----------------------------------------------
                0.00    0.00      11/83          std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector() [200]
                0.00    0.00      72/83          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[132]    0.0    0.00    0.00      83         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() [132]
-----------------------------------------------
                0.00    0.00      24/76          cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [151]
                0.00    0.00      52/76          void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [161]
[133]    0.0    0.00    0.00      76         cv::Mat* std::__addressof<cv::Mat>(cv::Mat&) [133]
-----------------------------------------------
                0.00    0.00       7/75          void std::_Construct<Mat<float>, Mat<float> >(Mat<float>*, Mat<float> const&) [85]
                0.00    0.00      16/75          __gnu_cxx::new_allocator<Mat<float> >::construct(Mat<float>*, Mat<float> const&) [75]
                0.00    0.00      24/75          void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&) [181]
                0.00    0.00      28/75          __gnu_cxx::new_allocator<cv::Mat>::construct(cv::Mat*, cv::Mat const&) [167]
[134]    0.0    0.00    0.00      75         operator new(unsigned int, void*) [134]
-----------------------------------------------
                0.00    0.00      24/72          __gnu_cxx::new_allocator<cv::Mat>::allocate(unsigned int, void const*) [174]
                0.00    0.00      48/72          __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::max_size(std::allocator<cv::Mat> const&) [147]
[135]    0.0    0.00    0.00      72         __gnu_cxx::new_allocator<cv::Mat>::max_size() const [135]
-----------------------------------------------
                0.00    0.00      72/72          computeGradient(cv::Mat*) [201]
[136]    0.0    0.00    0.00      72         std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int) [136]
-----------------------------------------------
                0.00    0.00      18/70          computeGradient(cv::Mat*) [201]
                0.00    0.00      24/70          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
                0.00    0.00      28/70          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
[137]    0.0    0.00    0.00      70         std::vector<cv::Mat, std::allocator<cv::Mat> >::begin() [137]
                0.00    0.00      70/112         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&) [126]
-----------------------------------------------
                0.00    0.00      64/64          OODirectSlamSE3<float>::computePyramid(int) [31]
[138]    0.0    0.00    0.00      64         Frame<float>::Frame() [138]
                0.00    0.00      64/386         Mat<float>::Mat() [122]
-----------------------------------------------
                0.00    0.00      12/64          std::vector<Mat<float>, std::allocator<Mat<float> > >::end() [190]
                0.00    0.00      16/64          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
                0.00    0.00      36/64          std::vector<Mat<float>, std::allocator<Mat<float> > >::begin() [159]
[139]    0.0    0.00    0.00      64         __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::__normal_iterator(Mat<float>* const&) [139]
-----------------------------------------------
                0.00    0.00      64/64          afficher(std::string, cv::Mat*, cv::Mat*, cv::Mat*, bool, float) [172]
[140]    0.0    0.00    0.00      64         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [140]
-----------------------------------------------
                0.00    0.00       1/56          Ranq1::Ranq1(long) [215]
                0.00    0.00      55/56          Ranq1::doub() [142]
[141]    0.0    0.00    0.00      56         Ranq1::int64() [141]
-----------------------------------------------
                0.00    0.00      55/55          Ranfib::Ranfib(long) [216]
[142]    0.0    0.00    0.00      55         Ranq1::doub() [142]
                0.00    0.00      55/56          Ranq1::int64() [141]
-----------------------------------------------
                0.00    0.00      24/52          void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&) [181]
                0.00    0.00      28/52          __gnu_cxx::new_allocator<cv::Mat>::construct(cv::Mat*, cv::Mat const&) [167]
[143]    0.0    0.00    0.00      52         cv::Mat::Mat(cv::Mat const&) [143]
                0.00    0.00     104/104         cv::Mat::MStep::operator[](int) [128]
                0.00    0.00     104/104         cv::Mat::MStep::operator[](int) const [129]
                0.00    0.00      52/1787        cv::Mat::MSize::MSize(int*) [115]
                0.00    0.00      52/1787        cv::Mat::MStep::MStep() [116]
-----------------------------------------------
                0.00    0.00      24/52          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
                0.00    0.00      28/52          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
[144]    0.0    0.00    0.00      52         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [144]
                0.00    0.00     104/160         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const [124]
-----------------------------------------------
                0.00    0.00      52/52          void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [161]
[145]    0.0    0.00    0.00      52         void std::_Destroy<cv::Mat>(cv::Mat*) [145]
                0.00    0.00      52/1897        cv::Mat::~Mat() [114]
-----------------------------------------------
                0.00    0.00       2/50          main10() [2]
                0.00    0.00      16/50          LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.00      32/50          LSSE3<float>::energy(Mat<float>) [4]
[146]    0.0    0.00    0.00      50         std::numeric_limits<float>::epsilon() [146]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const [150]
[147]    0.0    0.00    0.00      48         __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::max_size(std::allocator<cv::Mat> const&) [147]
                0.00    0.00      48/72          __gnu_cxx::new_allocator<cv::Mat>::max_size() const [135]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const [150]
[148]    0.0    0.00    0.00      48         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() const [148]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const [188]
[149]    0.0    0.00    0.00      48         std::vector<Mat<float>, std::allocator<Mat<float> > >::size() const [149]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const [178]
[150]    0.0    0.00    0.00      48         std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const [150]
                0.00    0.00      48/48          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() const [148]
                0.00    0.00      48/48          __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::max_size(std::allocator<cv::Mat> const&) [147]
-----------------------------------------------
                0.00    0.00      48/48          cv::Mat* std::uninitialized_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [152]
[151]    0.0    0.00    0.00      48         cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [151]
                0.00    0.00      24/76          cv::Mat* std::__addressof<cv::Mat>(cv::Mat&) [133]
                0.00    0.00      24/24          void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&) [181]
-----------------------------------------------
                0.00    0.00      48/48          cv::Mat* std::__uninitialized_copy_a<cv::Mat*, cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [153]
[152]    0.0    0.00    0.00      48         cv::Mat* std::uninitialized_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [152]
                0.00    0.00      48/48          cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [151]
-----------------------------------------------
                0.00    0.00      48/48          cv::Mat* std::__uninitialized_move_if_noexcept_a<cv::Mat*, cv::Mat*, std::allocator<cv::Mat> >(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [154]
[153]    0.0    0.00    0.00      48         cv::Mat* std::__uninitialized_copy_a<cv::Mat*, cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [153]
                0.00    0.00      48/48          cv::Mat* std::uninitialized_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [152]
-----------------------------------------------
                0.00    0.00      48/48          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[154]    0.0    0.00    0.00      48         cv::Mat* std::__uninitialized_move_if_noexcept_a<cv::Mat*, cv::Mat*, std::allocator<cv::Mat> >(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [154]
                0.00    0.00      48/48          cv::Mat* std::__uninitialized_copy_a<cv::Mat*, cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [153]
-----------------------------------------------
                0.00    0.00      16/48          LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [29]
                0.00    0.00      32/48          LSSE3<float>::energy(Mat<float>) [4]
[155]    0.0    0.00    0.00      48         std::pow(float, float) [155]
-----------------------------------------------
                0.00    0.00       9/45          std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector() [94]
                0.00    0.00      36/45          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[156]    0.0    0.00    0.00      45         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() [156]
-----------------------------------------------
                0.00    0.00      36/36          computeGradient(cv::Mat*) [201]
[157]    0.0    0.00    0.00      36         cv::MatExpr::~MatExpr() [157]
                0.00    0.00     108/1897        cv::Mat::~Mat() [114]
-----------------------------------------------
                0.00    0.00      12/36          __gnu_cxx::new_allocator<Mat<float> >::allocate(unsigned int, void const*) [187]
                0.00    0.00      24/36          __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::max_size(std::allocator<Mat<float> > const&) [175]
[158]    0.0    0.00    0.00      36         __gnu_cxx::new_allocator<Mat<float> >::max_size() const [158]
-----------------------------------------------
                0.00    0.00       8/36          OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
                0.00    0.00      12/36          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
                0.00    0.00      16/36          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
[159]    0.0    0.00    0.00      36         std::vector<Mat<float>, std::allocator<Mat<float> > >::begin() [159]
                0.00    0.00      36/64          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::__normal_iterator(Mat<float>* const&) [139]
-----------------------------------------------
                0.00    0.00      12/36          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const [188]
                0.00    0.00      24/36          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const [178]
[160]    0.0    0.00    0.00      36         unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [160]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [163]
[161]    0.0    0.00    0.00      35         void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [161]
                0.00    0.00      52/76          cv::Mat* std::__addressof<cv::Mat>(cv::Mat&) [133]
                0.00    0.00      52/52          void std::_Destroy<cv::Mat>(cv::Mat*) [145]
-----------------------------------------------
                0.00    0.00      11/35          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base() [198]
                0.00    0.00      24/35          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[162]    0.0    0.00    0.00      35         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int) [162]
                0.00    0.00      24/24          __gnu_cxx::new_allocator<cv::Mat>::deallocate(cv::Mat*, unsigned int) [173]
-----------------------------------------------
                0.00    0.00      35/35          void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [164]
[163]    0.0    0.00    0.00      35         void std::_Destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [163]
                0.00    0.00      35/35          void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [161]
-----------------------------------------------
                0.00    0.00      11/35          std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector() [200]
                0.00    0.00      24/35          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[164]    0.0    0.00    0.00      35         void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [164]
                0.00    0.00      35/35          void std::_Destroy<cv::Mat*>(cv::Mat*, cv::Mat*) [163]
-----------------------------------------------
                0.00    0.00       4/31          main10() [2]
                0.00    0.00      27/31          cv::MatExpr::operator cv::Mat() const [171]
[165]    0.0    0.00    0.00      31         cv::Mat::Mat() [165]
                0.00    0.00      31/1787        cv::Mat::MSize::MSize(int*) [115]
                0.00    0.00      31/1787        cv::Mat::MStep::MStep() [116]
                0.00    0.00      31/1735        cv::Mat::initEmpty() [117]
-----------------------------------------------
                0.00    0.00       7/30          Mat<float>* std::__uninitialized_copy<false>::__uninit_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*) [81]
                0.00    0.00      23/30          void std::_Destroy_aux<false>::__destroy<Mat<float>*>(Mat<float>*, Mat<float>*) [89]
[166]    0.0    0.00    0.00      30         Mat<float>* std::__addressof<Mat<float> >(Mat<float>&) [166]
-----------------------------------------------
                0.00    0.00      28/28          void __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::construct<cv::Mat>(std::allocator<cv::Mat>&, cv::Mat*, cv::Mat const&) [168]
[167]    0.0    0.00    0.00      28         __gnu_cxx::new_allocator<cv::Mat>::construct(cv::Mat*, cv::Mat const&) [167]
                0.00    0.00      28/75          operator new(unsigned int, void*) [134]
                0.00    0.00      28/52          cv::Mat::Mat(cv::Mat const&) [143]
-----------------------------------------------
                0.00    0.00       4/28          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
                0.00    0.00      24/28          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[168]    0.0    0.00    0.00      28         void __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::construct<cv::Mat>(std::allocator<cv::Mat>&, cv::Mat*, cv::Mat const&) [168]
                0.00    0.00      28/28          __gnu_cxx::new_allocator<cv::Mat>::construct(cv::Mat*, cv::Mat const&) [167]
-----------------------------------------------
                0.00    0.00      12/28          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
                0.00    0.00      16/28          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
[169]    0.0    0.00    0.00      28         __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::difference_type __gnu_cxx::operator-<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [169]
                0.00    0.00      56/88          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::base() const [131]
-----------------------------------------------
                0.00    0.00      10/28          main10() [2]
                0.00    0.00      18/28          computeGradient(cv::Mat*) [201]
[170]    0.0    0.00    0.00      28         std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
                0.00    0.00      28/70          std::vector<cv::Mat, std::allocator<cv::Mat> >::begin() [137]
                0.00    0.00      28/52          __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [144]
                0.00    0.00      28/112         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&) [126]
                0.00    0.00      24/24          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
                0.00    0.00       4/14          std::vector<cv::Mat, std::allocator<cv::Mat> >::end() [185]
                0.00    0.00       4/4           bool __gnu_cxx::operator==<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [213]
                0.00    0.00       4/28          void __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::construct<cv::Mat>(std::allocator<cv::Mat>&, cv::Mat*, cv::Mat const&) [168]
-----------------------------------------------
                0.00    0.00      27/27          computeGradient(cv::Mat*) [201]
[171]    0.0    0.00    0.00      27         cv::MatExpr::operator cv::Mat() const [171]
                0.00    0.00      27/31          cv::Mat::Mat() [165]
-----------------------------------------------
                0.00    0.00      24/24          void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [47]
[172]    0.0    0.00    0.00      24         afficher(std::string, cv::Mat*, cv::Mat*, cv::Mat*, bool, float) [172]
                0.00    0.00      80/107         cv::Size_<int>::Size_(int, int) [127]
                0.00    0.00      64/64          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [140]
-----------------------------------------------
                0.00    0.00      24/24          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int) [162]
[173]    0.0    0.00    0.00      24         __gnu_cxx::new_allocator<cv::Mat>::deallocate(cv::Mat*, unsigned int) [173]
-----------------------------------------------
                0.00    0.00      24/24          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_allocate(unsigned int) [179]
[174]    0.0    0.00    0.00      24         __gnu_cxx::new_allocator<cv::Mat>::allocate(unsigned int, void const*) [174]
                0.00    0.00      24/72          __gnu_cxx::new_allocator<cv::Mat>::max_size() const [135]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Mat<float>, std::allocator<Mat<float> > >::max_size() const [177]
[175]    0.0    0.00    0.00      24         __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::max_size(std::allocator<Mat<float> > const&) [175]
                0.00    0.00      24/36          __gnu_cxx::new_allocator<Mat<float> >::max_size() const [158]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Mat<float>, std::allocator<Mat<float> > >::max_size() const [177]
[176]    0.0    0.00    0.00      24         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() const [176]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const [188]
[177]    0.0    0.00    0.00      24         std::vector<Mat<float>, std::allocator<Mat<float> > >::max_size() const [177]
                0.00    0.00      24/24          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() const [176]
                0.00    0.00      24/24          __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::max_size(std::allocator<Mat<float> > const&) [175]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[178]    0.0    0.00    0.00      24         std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const [178]
                0.00    0.00      96/96          std::vector<cv::Mat, std::allocator<cv::Mat> >::size() const [130]
                0.00    0.00      48/48          std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const [150]
                0.00    0.00      24/36          unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [160]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
[179]    0.0    0.00    0.00      24         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_allocate(unsigned int) [179]
                0.00    0.00      24/24          __gnu_cxx::new_allocator<cv::Mat>::allocate(unsigned int, void const*) [174]
-----------------------------------------------
                0.00    0.00      24/24          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
[180]    0.0    0.00    0.00      24         std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [180]
                0.00    0.00      72/83          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() [132]
                0.00    0.00      48/160         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const [124]
                0.00    0.00      48/48          cv::Mat* std::__uninitialized_move_if_noexcept_a<cv::Mat*, cv::Mat*, std::allocator<cv::Mat> >(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [154]
                0.00    0.00      24/24          std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const [178]
                0.00    0.00      24/70          std::vector<cv::Mat, std::allocator<cv::Mat> >::begin() [137]
                0.00    0.00      24/52          __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [144]
                0.00    0.00      24/24          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_allocate(unsigned int) [179]
                0.00    0.00      24/28          void __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::construct<cv::Mat>(std::allocator<cv::Mat>&, cv::Mat*, cv::Mat const&) [168]
                0.00    0.00      24/35          void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [164]
                0.00    0.00      24/35          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int) [162]
-----------------------------------------------
                0.00    0.00      24/24          cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*) [151]
[181]    0.0    0.00    0.00      24         void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&) [181]
                0.00    0.00      24/75          operator new(unsigned int, void*) [134]
                0.00    0.00      24/52          cv::Mat::Mat(cv::Mat const&) [143]
-----------------------------------------------
                0.00    0.00       9/21          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::~_Vector_base() [209]
                0.00    0.00      12/21          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[182]    0.0    0.00    0.00      21         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_deallocate(Mat<float>*, unsigned int) [182]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<Mat<float> >::deallocate(Mat<float>*, unsigned int) [186]
-----------------------------------------------
                0.00    0.00      18/18          computeGradient(cv::Mat*) [201]
[183]    0.0    0.00    0.00      18         cv::Mat::type() const [183]
-----------------------------------------------
                0.00    0.00       9/18          computeGradient(cv::Mat*) [201]
                0.00    0.00       9/18          Mat<float> cv2Matp<float>(cv::Mat) [67]
[184]    0.0    0.00    0.00      18         cv::Mat::channels() const [184]
-----------------------------------------------
                0.00    0.00       4/14          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
                0.00    0.00      10/14          main10() [2]
[185]    0.0    0.00    0.00      14         std::vector<cv::Mat, std::allocator<cv::Mat> >::end() [185]
                0.00    0.00      14/112         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&) [126]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_deallocate(Mat<float>*, unsigned int) [182]
[186]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Mat<float> >::deallocate(Mat<float>*, unsigned int) [186]
-----------------------------------------------
                0.00    0.00      12/12          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_allocate(unsigned int) [189]
[187]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Mat<float> >::allocate(unsigned int, void const*) [187]
                0.00    0.00      12/36          __gnu_cxx::new_allocator<Mat<float> >::max_size() const [158]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[188]    0.0    0.00    0.00      12         std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const [188]
                0.00    0.00      48/48          std::vector<Mat<float>, std::allocator<Mat<float> > >::size() const [149]
                0.00    0.00      24/24          std::vector<Mat<float>, std::allocator<Mat<float> > >::max_size() const [177]
                0.00    0.00      12/36          unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&) [160]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [73]
[189]    0.0    0.00    0.00      12         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_allocate(unsigned int) [189]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<Mat<float> >::allocate(unsigned int, void const*) [187]
-----------------------------------------------
                0.00    0.00       4/12          std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
                0.00    0.00       8/12          main10() [2]
[190]    0.0    0.00    0.00      12         std::vector<Mat<float>, std::allocator<Mat<float> > >::end() [190]
                0.00    0.00      12/64          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::__normal_iterator(Mat<float>* const&) [139]
-----------------------------------------------
                0.00    0.00      11/11          std::allocator<cv::Mat>::allocator() [193]
[191]    0.0    0.00    0.00      11         __gnu_cxx::new_allocator<cv::Mat>::new_allocator() [191]
-----------------------------------------------
                0.00    0.00      11/11          std::allocator<cv::Mat>::~allocator() [194]
[192]    0.0    0.00    0.00      11         __gnu_cxx::new_allocator<cv::Mat>::~new_allocator() [192]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::_Vector_impl() [195]
[193]    0.0    0.00    0.00      11         std::allocator<cv::Mat>::allocator() [193]
                0.00    0.00      11/11          __gnu_cxx::new_allocator<cv::Mat>::new_allocator() [191]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::~_Vector_impl() [196]
[194]    0.0    0.00    0.00      11         std::allocator<cv::Mat>::~allocator() [194]
                0.00    0.00      11/11          __gnu_cxx::new_allocator<cv::Mat>::~new_allocator() [192]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_base() [197]
[195]    0.0    0.00    0.00      11         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::_Vector_impl() [195]
                0.00    0.00      11/11          std::allocator<cv::Mat>::allocator() [193]
-----------------------------------------------
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base() [198]
[196]    0.0    0.00    0.00      11         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::~_Vector_impl() [196]
                0.00    0.00      11/11          std::allocator<cv::Mat>::~allocator() [194]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<cv::Mat, std::allocator<cv::Mat> >::vector() [199]
[197]    0.0    0.00    0.00      11         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_base() [197]
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::_Vector_impl() [195]
-----------------------------------------------
                0.00    0.00      11/11          std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector() [200]
[198]    0.0    0.00    0.00      11         std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base() [198]
                0.00    0.00      11/35          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int) [162]
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::~_Vector_impl() [196]
-----------------------------------------------
                0.00    0.00       2/11          main10() [2]
                0.00    0.00       9/11          computeGradient(cv::Mat*) [201]
[199]    0.0    0.00    0.00      11         std::vector<cv::Mat, std::allocator<cv::Mat> >::vector() [199]
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_base() [197]
-----------------------------------------------
                0.00    0.00       2/11          main10() [2]
                0.00    0.00       9/11          computeGradient(cv::Mat*) [201]
[200]    0.0    0.00    0.00      11         std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector() [200]
                0.00    0.00      11/83          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() [132]
                0.00    0.00      11/35          void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&) [164]
                0.00    0.00      11/11          std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base() [198]
-----------------------------------------------
                0.00    0.00       9/9           main10() [2]
[201]    0.0    0.00    0.00       9         computeGradient(cv::Mat*) [201]
                0.00    0.00      72/72          std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int) [136]
                0.00    0.00      36/36          cv::MatExpr::~MatExpr() [157]
                0.00    0.00      27/27          cv::MatExpr::operator cv::Mat() const [171]
                0.00    0.00      18/18          cv::Mat::type() const [183]
                0.00    0.00      18/107         cv::Size_<int>::Size_(int, int) [127]
                0.00    0.00      18/70          std::vector<cv::Mat, std::allocator<cv::Mat> >::begin() [137]
                0.00    0.00      18/28          std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
                0.00    0.00      18/1897        cv::Mat::~Mat() [114]
                0.00    0.00       9/18          cv::Mat::channels() const [184]
                0.00    0.00       9/11          std::vector<cv::Mat, std::allocator<cv::Mat> >::vector() [199]
                0.00    0.00       9/11          std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector() [200]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator<Mat<float> >::allocator() [204]
[202]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<Mat<float> >::new_allocator() [202]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator<Mat<float> >::~allocator() [205]
[203]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<Mat<float> >::~new_allocator() [203]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::_Vector_impl() [206]
[204]    0.0    0.00    0.00       9         std::allocator<Mat<float> >::allocator() [204]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<Mat<float> >::new_allocator() [202]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::~_Vector_impl() [207]
[205]    0.0    0.00    0.00       9         std::allocator<Mat<float> >::~allocator() [205]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<Mat<float> >::~new_allocator() [203]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_base() [208]
[206]    0.0    0.00    0.00       9         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::_Vector_impl() [206]
                0.00    0.00       9/9           std::allocator<Mat<float> >::allocator() [204]
-----------------------------------------------
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::~_Vector_base() [209]
[207]    0.0    0.00    0.00       9         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::~_Vector_impl() [207]
                0.00    0.00       9/9           std::allocator<Mat<float> >::~allocator() [205]
-----------------------------------------------
                0.00    0.00       9/9           std::vector<Mat<float>, std::allocator<Mat<float> > >::vector() [210]
[208]    0.0    0.00    0.00       9         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_base() [208]
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::_Vector_impl() [206]
-----------------------------------------------
                0.00    0.00       9/9           std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector() [94]
[209]    0.0    0.00    0.00       9         std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::~_Vector_base() [209]
                0.00    0.00       9/21          std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_deallocate(Mat<float>*, unsigned int) [182]
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::~_Vector_impl() [207]
-----------------------------------------------
                0.00    0.00       1/9           main10() [2]
                0.00    0.00       8/9           OO<float>::OO() [211]
[210]    0.0    0.00    0.00       9         std::vector<Mat<float>, std::allocator<Mat<float> > >::vector() [210]
                0.00    0.00       9/9           std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_base() [208]
-----------------------------------------------
                0.00    0.00       8/8           OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [30]
[211]    0.0    0.00    0.00       8         OO<float>::OO() [211]
                0.00    0.00       8/9           std::vector<Mat<float>, std::allocator<Mat<float> > >::vector() [210]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&) [72]
[212]    0.0    0.00    0.00       4         bool __gnu_cxx::operator==<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [212]
                0.00    0.00       8/88          __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::base() const [131]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&) [170]
[213]    0.0    0.00    0.00       4         bool __gnu_cxx::operator==<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [213]
                0.00    0.00       8/160         __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const [124]
-----------------------------------------------
                0.00    0.00       1/1           initializeInvDM(Frame<float>*, float) [41]
[214]    0.0    0.00    0.00       1         NormalRand::NormalRand(double, double, long) [214]
                0.00    0.00       1/1           Ranfib::Ranfib(long) [216]
-----------------------------------------------
                0.00    0.00       1/1           Ranfib::Ranfib(long) [216]
[215]    0.0    0.00    0.00       1         Ranq1::Ranq1(long) [215]
                0.00    0.00       1/56          Ranq1::int64() [141]
-----------------------------------------------
                0.00    0.00       1/1           NormalRand::NormalRand(double, double, long) [214]
[216]    0.0    0.00    0.00       1         Ranfib::Ranfib(long) [216]
                0.00    0.00      55/55          Ranq1::doub() [142]
                0.00    0.00       1/1           Ranq1::Ranq1(long) [215]
-----------------------------------------------
                0.00    0.00       1/1           main10() [2]
[217]    0.0    0.00    0.00       1         std::ceil(float) [217]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [96] _GLOBAL__sub_I__Z4absMRKN2cv3MatE (main.cpp) [122] Mat<float>::Mat() [193] std::allocator<cv::Mat>::allocator()
  [44] void DrawCircle<float>(Mat<float>*, int, int, int, float) [27] Mat<float>::~Mat() [194] std::allocator<cv::Mat>::~allocator()
  [47] void afficherMat<float>(std::string, Mat<float>*, Mat<float>*, Mat<float>*, bool, float) [17] Mat<float>::operator=(Mat<float> const&) [89] void std::_Destroy_aux<false>::__destroy<Mat<float>*>(Mat<float>*, Mat<float>*)
  [50] Mat<float> crossProduct<float>(Mat<float> const&) [15] Frame<float>::get(Mat<float> const&) [161] void std::_Destroy_aux<false>::__destroy<cv::Mat*>(cv::Mat*, cv::Mat*)
 [201] computeGradient(cv::Mat*) [70] Frame<float>::copyFrame(Frame<float> const&) [189] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_allocate(unsigned int)
  [41] initializeInvDM(Frame<float>*, float) [71] Frame<float>::Frame(Mat<float>, int) [206] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::_Vector_impl()
   [3] poseEstimationLS(Frame<float>*, Mat<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [92] Frame<float>::Frame(Frame<float> const&) [207] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_impl::~_Vector_impl()
  [45] computeEpipolarLine(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [138] Frame<float>::Frame() [182] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_deallocate(Mat<float>*, unsigned int)
  [43] computeEpipolarLine2(Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [78] Frame<float>::~Frame() [156] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator()
  [52] void homogeneousNormalization<float>(Mat<float>*) [69] Frame<float>::operator=(Frame<float> const&) [208] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_Vector_base()
  [14] exhaustiveSearchEpipolarLine(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, float, Mat<float>*, Mat<float>*, float) [79] LSSE3<float>::getResidual(int) [209] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::~_Vector_base()
  [60] float max<float>(Mat<float>) [10] LSSE3<float>::rigidMotion(Mat<float> const&, Mat<float> const&) [179] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_allocate(unsigned int)
  [24] Mat<float> sum<float>(Mat<float> const&) [53] LSSE3<float>::Z(Mat<float> const&) [195] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::_Vector_impl()
  [97] __static_initialization_and_destruction_0(int, int) (main.cpp) [7] LSSE3<float>::r(Mat<float> const&, Mat<float> const&) [196] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_impl::~_Vector_impl()
  [61] Mat<float> Line<float>(Mat<float> const&, int) [5] LSSE3<float>::computePyramidResidualA(int) [162] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_deallocate(cv::Mat*, unsigned int)
  [54] Mat<float> absM<float>(Mat<float> const&) [6] LSSE3<float>::Jr(Mat<float> const&, Mat<float> const&) [132] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator()
  [22] Mat<float> expW<float>(Mat<float> const&) [66] LSSE3<float>::JrW(Mat<float> const&, Mat<float> const&, int, int, int) [197] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_Vector_base()
  [57] float mean<float>(Mat<float>) [35] LSSE3<float>::proj(Mat<float> const&) [198] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::~_Vector_base()
  [59] float fabs_<float>(float) [9] LSSE3<float>::warp(Mat<float> const&, Mat<float> const&) [146] std::numeric_limits<float>::epsilon()
  [63] Mat<float> invGJ<float>(Mat<float>, int) [4] LSSE3<float>::energy(Mat<float>) [81] Mat<float>* std::__uninitialized_copy<false>::__uninit_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*)
  [64] Mat<float> gaussj<float>(Mat<float>*, Mat<float>*, int) [25] LSSE3<float>::retroproj(Mat<float> const&) [151] cv::Mat* std::__uninitialized_copy<false>::__uninit_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*)
  [80] bool isnanM<float>(Mat<float>) [29] LSSE3<float>::LSSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*, int) [73] std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&)
   [2] main10()               [74] LSSE3<float>::~LSSE3() [190] std::vector<Mat<float>, std::allocator<Mat<float> > >::end()
  [48] float norme1<float>(Mat<float>) [142] Ranq1::doub() [159] std::vector<Mat<float>, std::allocator<Mat<float> > >::begin()
  [62] float norme2<float>(Mat<float>) [141] Ranq1::int64() [72] std::vector<Mat<float>, std::allocator<Mat<float> > >::insert(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >, Mat<float> const&)
  [19] cv::Mat Mat2cvp<float>(Mat<float>, Mat<float>, Mat<float>) [215] Ranq1::Ranq1(long) [210] std::vector<Mat<float>, std::allocator<Mat<float> > >::vector()
  [67] Mat<float> cv2Matp<float>(cv::Mat) [121] Ranfib::doub() [94] std::vector<Mat<float>, std::allocator<Mat<float> > >::~vector()
  [37] Mat<float> extract<float>(Mat<float> const&, int, int, int, int) [216] Ranfib::Ranfib(long) [180] std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_insert_aux(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&)
  [32] Mat<float> pooling<float>(Mat<float>, Mat<float>, int) [186] __gnu_cxx::new_allocator<Mat<float> >::deallocate(Mat<float>*, unsigned int) [185] std::vector<cv::Mat, std::allocator<cv::Mat> >::end()
  [68] Mat<float> product<float>(Mat<float>*, Mat<float>*) [187] __gnu_cxx::new_allocator<Mat<float> >::allocate(unsigned int, void const*) [137] std::vector<cv::Mat, std::allocator<cv::Mat> >::begin()
 [172] afficher(std::string, cv::Mat*, cv::Mat*, cv::Mat*, bool, float) [75] __gnu_cxx::new_allocator<Mat<float> >::construct(Mat<float>*, Mat<float> const&) [170] std::vector<cv::Mat, std::allocator<cv::Mat> >::insert(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >, cv::Mat const&)
  [11] Mat<float> expMSIM3<float>(Mat<float> const&) [202] __gnu_cxx::new_allocator<Mat<float> >::new_allocator() [199] std::vector<cv::Mat, std::allocator<cv::Mat> >::vector()
  [40] debugPose(Frame<float>*, Frame<float>*, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, Mat<float> const&, float) [203] __gnu_cxx::new_allocator<Mat<float> >::~new_allocator() [200] std::vector<cv::Mat, std::allocator<cv::Mat> >::~vector()
  [16] Mat<float> operatorC<float>(Mat<float> const&, Mat<float> const&) [173] __gnu_cxx::new_allocator<cv::Mat>::deallocate(cv::Mat*, unsigned int) [136] std::vector<cv::Mat, std::allocator<cv::Mat> >::operator[](unsigned int)
  [21] Mat<float> operatorL<float>(Mat<float> const&, Mat<float> const&) [174] __gnu_cxx::new_allocator<cv::Mat>::allocate(unsigned int, void const*) [85] void std::_Construct<Mat<float>, Mat<float> >(Mat<float>*, Mat<float> const&)
  [46] Mat<float> transpose<float>(Mat<float> const&) [167] __gnu_cxx::new_allocator<cv::Mat>::construct(cv::Mat*, cv::Mat const&) [181] void std::_Construct<cv::Mat, cv::Mat>(cv::Mat*, cv::Mat const&)
  [49] void transpose<float>(Mat<float>*) [191] __gnu_cxx::new_allocator<cv::Mat>::new_allocator() [166] Mat<float>* std::__addressof<Mat<float> >(Mat<float>&)
 [123] NormalRand::dev()     [192] __gnu_cxx::new_allocator<cv::Mat>::~new_allocator() [133] cv::Mat* std::__addressof<cv::Mat>(cv::Mat&)
 [214] NormalRand::NormalRand(double, double, long) [175] __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::max_size(std::allocator<Mat<float> > const&) [82] Mat<float>* std::uninitialized_copy<Mat<float>*, Mat<float>*>(Mat<float>*, Mat<float>*, Mat<float>*)
  [31] OODirectSlamSE3<float>::computePyramid(int) [76] void __gnu_cxx::__alloc_traits<std::allocator<Mat<float> > >::construct<Mat<float> >(std::allocator<Mat<float> >&, Mat<float>*, Mat<float> const&) [152] cv::Mat* std::uninitialized_copy<cv::Mat*, cv::Mat*>(cv::Mat*, cv::Mat*, cv::Mat*)
  [30] OODirectSlamSE3<float>::OODirectSlamSE3(Frame<float>*, Frame<float>*, Mat<float>*, Mat<float>*, Mat<float>*, Mat<float>*) [147] __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::max_size(std::allocator<cv::Mat> const&) [83] Mat<float>* std::__uninitialized_copy_a<Mat<float>*, Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&)
  [77] OODirectSlamSE3<float>::~OODirectSlamSE3() [168] void __gnu_cxx::__alloc_traits<std::allocator<cv::Mat> >::construct<cv::Mat>(std::allocator<cv::Mat>&, cv::Mat*, cv::Mat const&) [153] cv::Mat* std::__uninitialized_copy_a<cv::Mat*, cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&)
 [211] OO<float>::OO()       [139] __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::__normal_iterator(Mat<float>* const&) [84] Mat<float>* std::__uninitialized_move_if_noexcept_a<Mat<float>*, Mat<float>*, std::allocator<Mat<float> > >(Mat<float>*, Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&)
  [95] OO<float>::~OO()      [126] __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::__normal_iterator(cv::Mat* const&) [154] cv::Mat* std::__uninitialized_move_if_noexcept_a<cv::Mat*, cv::Mat*, std::allocator<cv::Mat> >(cv::Mat*, cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&)
 [106] unsigned char* cv::Mat::ptr<unsigned char>(int) [212] bool __gnu_cxx::operator==<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [120] std::abs(float)
 [115] cv::Mat::MSize::MSize(int*) [213] bool __gnu_cxx::operator==<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [107] std::cos(float)
 [116] cv::Mat::MStep::MStep() [169] __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::difference_type __gnu_cxx::operator-<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >(__gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&, __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > > const&) [160] unsigned int const& std::max<unsigned int>(unsigned int const&, unsigned int const&)
 [128] cv::Mat::MStep::operator[](int) [144] __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::difference_type __gnu_cxx::operator-<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >(__gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&, __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > > const&) [155] std::pow(float, float)
 [118] cv::Mat::create(int, int, int) [183] cv::Mat::type() const [108] std::sin(float)
 [113] cv::Mat::release()    [129] cv::Mat::MStep::operator[](int) const [217] std::ceil(float)
 [117] cv::Mat::initEmpty()  [184] cv::Mat::channels() const [51] std::sqrt(float)
 [143] cv::Mat::Mat(cv::Mat const&) [171] cv::MatExpr::operator cv::Mat() const [58] void std::swap<float>(float&, float&)
 [119] cv::Mat::Mat(int, int, int) [8] Mat<float>::get(int, int) const [105] std::floor(float)
 [165] cv::Mat::Mat()         [23] Mat<float>::getLine() const [56] __gnu_cxx::__enable_if<std::__is_arithmetic<float>::__value, int>::__type std::isnan<float>(float)
 [114] cv::Mat::~Mat()        [38] Mat<float>::getColumn() const [88] void std::_Destroy<Mat<float> >(Mat<float>*)
 [110] cv::Vec<double, 4>::Vec() [125] Frame<float>::getChannel() const [145] void std::_Destroy<cv::Mat>(cv::Mat*)
 [111] cv::Matx<double, 4, 1>::Matx() [158] __gnu_cxx::new_allocator<Mat<float> >::max_size() const [90] void std::_Destroy<Mat<float>*>(Mat<float>*, Mat<float>*)
 [127] cv::Size_<int>::Size_(int, int) [135] __gnu_cxx::new_allocator<cv::Mat>::max_size() const [91] void std::_Destroy<Mat<float>*, Mat<float> >(Mat<float>*, Mat<float>*, std::allocator<Mat<float> >&)
 [109] cv::Point_<int>::Point_(int, int) [131] __gnu_cxx::__normal_iterator<Mat<float>*, std::vector<Mat<float>, std::allocator<Mat<float> > > >::base() const [163] void std::_Destroy<cv::Mat*>(cv::Mat*, cv::Mat*)
 [157] cv::MatExpr::~MatExpr() [124] __gnu_cxx::__normal_iterator<cv::Mat*, std::vector<cv::Mat, std::allocator<cv::Mat> > >::base() const [164] void std::_Destroy<cv::Mat*, cv::Mat>(cv::Mat*, cv::Mat*, std::allocator<cv::Mat>&)
 [112] cv::Scalar_<double>::Scalar_(double, double, double, double) [176] std::_Vector_base<Mat<float>, std::allocator<Mat<float> > >::_M_get_Tp_allocator() const [140] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [36] Mat<float>::set(float, int, int) [148] std::_Vector_base<cv::Mat, std::allocator<cv::Mat> >::_M_get_Tp_allocator() const [86] bool operator==<float>(Mat<float> const&, Mat<float> const&)
  [18] Mat<float>::copy(Mat<float> const&) [188] std::vector<Mat<float>, std::allocator<Mat<float> > >::_M_check_len(unsigned int, char const*) const [65] bool operator< <float>(Mat<float> const&, Mat<float> const&)
  [87] Mat<float>::swap(int, int, int, int) [149] std::vector<Mat<float>, std::allocator<Mat<float> > >::size() const [26] Mat<float> operator-<float>(Mat<float> const&, Mat<float> const&)
  [55] Mat<float>::afficher() [177] std::vector<Mat<float>, std::allocator<Mat<float> > >::max_size() const [34] Mat<float> operator*<float>(float const&, Mat<float> const&)
  [42] Mat<float>::Mat(float, int, int) [178] std::vector<cv::Mat, std::allocator<cv::Mat> >::_M_check_len(unsigned int, char const*) const [20] Mat<float> operator*<float>(Mat<float> const&, Mat<float> const&)
  [13] Mat<float>::Mat(Mat<float> const&) [130] std::vector<cv::Mat, std::allocator<cv::Mat> >::size() const [134] operator new(unsigned int, void*)
  [12] Mat<float>::Mat(Mat<float> const&, float, int, int, int, int) [150] std::vector<cv::Mat, std::allocator<cv::Mat> >::max_size() const [33] Mat<float> operator+<float>(Mat<float> const&, Mat<float> const&)
  [39] Mat<float>::Mat(int, int) [204] std::allocator<Mat<float> >::allocator() [28] Mat<float> operator%<float>(Mat<float> const&, Mat<float> const&)
  [93] Mat<float>::Mat(int, int, char) [205] std::allocator<Mat<float> >::~allocator()
